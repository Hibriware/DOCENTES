{"ast":null,"code":"var _jsxFileName = \"E:\\\\Certificados\\\\itsrdocentes\\\\itsrdocentes\\\\src\\\\componentes\\\\contenedores\\\\docente_calificaciones\\\\Tabla_registro.js\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nexport const TablaCapturaCalificaciones = data => {\n  const {\n    alumnos,\n    calificaciones,\n    setcalificaciones,\n    guardarPromedio,\n    ccx1,\n    ccx2,\n    ccx3,\n    ccx4\n  } = data;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    title: \"Captura de calificaciones\",\n    columns: alumnos.columns //columnas\n    ,\n    data: calificaciones.datalistaAlumnos //filas\n    ,\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setcalificaciones(prevState => {\n              const datalistaAlumnos = [...prevState.datalistaAlumnos]; //obtenr data\n\n              console.log(newData.calCriterio1 = newData.calR1 * (ccx1 / 100));\n              console.log(newData.calCriterio2 = newData.calR2 * (ccx2 / 100));\n              console.log(newData.calCriterio3 = newData.calR3 * (ccx3 / 100));\n              console.log(newData.calCriterio4 = newData.calR4 * (ccx4 / 100));\n              console.log(newData.calificaciontotal = parseInt(newData.calCriterio1) + parseInt(newData.calCriterio2) + parseInt(newData.calCriterio3) + parseInt(newData.calCriterio4));\n              console.log(newData); //estado fila modificado\n\n              datalistaAlumnos[datalistaAlumnos.indexOf(oldData)] = newData;\n              guardarPromedio(newData);\n              return { ...prevState,\n                datalistaAlumnos\n              };\n            });\n          }\n        }, 600);\n      })\n    },\n    options: {\n      headerStyle: {\n        backgroundColor: '#01579b',\n        color: '#FFF',\n        size: 'small'\n      },\n      rowStyle: {\n        white: 'pre'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["E:/Certificados/itsrdocentes/itsrdocentes/src/componentes/contenedores/docente_calificaciones/Tabla_registro.js"],"names":["React","MaterialTable","TablaCapturaCalificaciones","data","alumnos","calificaciones","setcalificaciones","guardarPromedio","ccx1","ccx2","ccx3","ccx4","columns","datalistaAlumnos","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","prevState","console","log","calCriterio1","calR1","calCriterio2","calR2","calCriterio3","calR3","calCriterio4","calR4","calificaciontotal","parseInt","indexOf","headerStyle","backgroundColor","color","size","rowStyle","white"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAGA,OAAO,MAAMC,0BAA0B,GAAIC,IAAD,IAAS;AAC/C,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,cAAV;AAA0BC,IAAAA,iBAA1B;AAA6CC,IAAAA,eAA7C;AAA8DC,IAAAA,IAA9D;AAAoEC,IAAAA,IAApE;AAAyEC,IAAAA,IAAzE;AAA8EC,IAAAA;AAA9E,MAAoFR,IAA1F;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,aAAD;AACA,IAAA,KAAK,EAAC,2BADN;AAEA,IAAA,OAAO,EAAEC,OAAO,CAACQ,OAFjB,CAEyB;AAFzB;AAGA,IAAA,IAAI,EAAEP,cAAc,CAACQ,gBAHrB,CAGsC;AAHtC;AAIA,IAAA,QAAQ,EACN;AACEC,MAAAA,WAAW,EAAE,CAACC,OAAD,EAAUC,OAAV,KACX,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;;AACP,cAAIF,OAAJ,EAAa;AACXV,YAAAA,iBAAiB,CAACc,SAAS,IAAI;AAC7B,oBAAMP,gBAAgB,GAAG,CAAC,GAAGO,SAAS,CAACP,gBAAd,CAAzB,CAD6B,CAC4B;;AACzDQ,cAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACQ,YAAR,GAAwBR,OAAO,CAACS,KAAR,IAAiBhB,IAAI,GAAG,GAAxB,CAApC;AACAa,cAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACU,YAAR,GAAwBV,OAAO,CAACW,KAAR,IAAiBjB,IAAI,GAAG,GAAxB,CAApC;AACAY,cAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACY,YAAR,GAAwBZ,OAAO,CAACa,KAAR,IAAiBlB,IAAI,GAAG,GAAxB,CAApC;AACAW,cAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACc,YAAR,GAAwBd,OAAO,CAACe,KAAR,IAAiBnB,IAAI,GAAG,GAAxB,CAApC;AACAU,cAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACgB,iBAAR,GAA6BC,QAAQ,CAACjB,OAAO,CAACQ,YAAT,CAAR,GAAiCS,QAAQ,CAACjB,OAAO,CAACU,YAAT,CAAzC,GAAkEO,QAAQ,CAACjB,OAAO,CAACY,YAAT,CAA1E,GAAmGK,QAAQ,CAACjB,OAAO,CAACc,YAAT,CAApJ;AACAR,cAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAP6B,CAOT;;AACpBF,cAAAA,gBAAgB,CAACA,gBAAgB,CAACoB,OAAjB,CAAyBjB,OAAzB,CAAD,CAAhB,GAAsDD,OAAtD;AACAR,cAAAA,eAAe,CAACQ,OAAD,CAAf;AACA,qBAAO,EAAE,GAAGK,SAAL;AAAgBP,gBAAAA;AAAhB,eAAP;AACD,aAXgB,CAAjB;AAYD;AACF,SAhBS,EAgBP,GAhBO,CAAV;AAiBD,OAlBD;AAFJ,KALF;AA4BA,IAAA,OAAO,EAAE;AACPqB,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE,SADN;AAEXC,QAAAA,KAAK,EAAE,MAFI;AAGXC,QAAAA,IAAI,EAAE;AAHK,OADN;AAMPC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE;AADC;AANH,KA5BT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CADJ;AA0CH,CA7CM","sourcesContent":["import React from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\n\r\nexport const TablaCapturaCalificaciones = (data) =>{\r\n    const {alumnos, calificaciones ,setcalificaciones, guardarPromedio ,ccx1, ccx2,ccx3,ccx4}=data;\r\n\r\n    return(\r\n        <div>\r\n              <MaterialTable\r\n              title=\"Captura de calificaciones\"\r\n              columns={alumnos.columns}//columnas\r\n              data={calificaciones.datalistaAlumnos}//filas\r\n              editable={\r\n                {\r\n                  onRowUpdate: (newData, oldData) =>\r\n                    new Promise(resolve => {\r\n                      setTimeout(() => {\r\n                        resolve();\r\n                        if (oldData) {\r\n                          setcalificaciones(prevState => {\r\n                            const datalistaAlumnos = [...prevState.datalistaAlumnos];//obtenr data\r\n                            console.log(newData.calCriterio1 = (newData.calR1 * (ccx1 / 100)))\r\n                            console.log(newData.calCriterio2 = (newData.calR2 * (ccx2 / 100)))\r\n                            console.log(newData.calCriterio3 = (newData.calR3 * (ccx3 / 100)))\r\n                            console.log(newData.calCriterio4 = (newData.calR4 * (ccx4 / 100)))\r\n                            console.log(newData.calificaciontotal = (parseInt(newData.calCriterio1) + parseInt(newData.calCriterio2) + parseInt(newData.calCriterio3) + parseInt(newData.calCriterio4)))\r\n                            console.log(newData)//estado fila modificado\r\n                            datalistaAlumnos[datalistaAlumnos.indexOf(oldData)] = newData;\r\n                            guardarPromedio(newData)\r\n                            return { ...prevState, datalistaAlumnos };\r\n                          });\r\n                        }\r\n                      }, 600);\r\n                    }),\r\n                }\r\n              }\r\n              options={{\r\n                headerStyle: {\r\n                  backgroundColor: '#01579b',\r\n                  color: '#FFF',\r\n                  size: 'small'\r\n                },\r\n                rowStyle: {\r\n                  white: 'pre',\r\n                }\r\n              }} />\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}