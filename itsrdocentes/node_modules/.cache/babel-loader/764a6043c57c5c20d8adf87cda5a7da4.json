{"ast":null,"code":"var _jsxFileName = \"C:\\\\programasproyectos\\\\Certificados\\\\itsrdocentes\\\\itsrdocentes\\\\src\\\\componentes\\\\contenedores\\\\docente_calificaciones\\\\select_temas.js\";\nimport React, { useEffect } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { datalistaAlumnos, dataCriterios, getAlumnos } from '../../servicios/api';\nimport { useStyles } from './dialogos_calificacion';\nexport var unidadCalificacion, id_criterios;\nexport const SelectTemas = React.memo(data => {\n  console.log('memo sect temas'); //const [unidad, setUnidad] = React.useState('');\n\n  const estilos = useStyles();\n  console.log('selctMterias');\n  useEffect(() => {\n    console.log('limpiar lista de temas anteriores');\n    data.setUnidad('');\n  }, [data.MATERIA_ID]);\n\n  const _obtenerTema = async tem => {\n    //inico\n    data.setOpen(true);\n    let numTemas = tem.target.value;\n    data.setUnidad(numTemas);\n    await getAlumnos(data.MATERIA_ID, numTemas); //LISTA DE ALUMNOS  Pendiene mandar unidad que es el tema #\n\n    await data.setcalificaciones({\n      datalistaAlumnos: datalistaAlumnos\n    });\n    await data.updates(data.MATERIA_ID, numTemas);\n    data.setOpen(false);\n    unidadCalificacion = dataCriterios[0].numUnidad;\n    id_criterios = dataCriterios[0].idcat_Unidad;\n  }; //fin\n\n\n  return React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: estilos.formControl,\n    margin: \"none\",\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-labe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Tema\"), React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-labe\",\n    id: \"Tema\",\n    label: \"Tema\",\n    value: data.unidad,\n    onChange: _obtenerTema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, data.listasTemas.map((tem, i) => React.createElement(MenuItem, {\n    key: i,\n    value: tem.numUnidad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, tem.tema))));\n});","map":{"version":3,"sources":["C:/programasproyectos/Certificados/itsrdocentes/itsrdocentes/src/componentes/contenedores/docente_calificaciones/select_temas.js"],"names":["React","useEffect","InputLabel","FormControl","Select","MenuItem","datalistaAlumnos","dataCriterios","getAlumnos","useStyles","unidadCalificacion","id_criterios","SelectTemas","memo","data","console","log","estilos","setUnidad","MATERIA_ID","_obtenerTema","tem","setOpen","numTemas","target","value","setcalificaciones","updates","numUnidad","idcat_Unidad","formControl","unidad","listasTemas","map","i","tema"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,UAA1C,QAA4D,qBAA5D;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAO,IAAIC,kBAAJ,EAAwBC,YAAxB;AAEP,OAAO,MAAMC,WAAW,GAAGZ,KAAK,CAACa,IAAN,CAAYC,IAAD,IAAU;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAD4C,CAG5C;;AACA,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEAf,EAAAA,SAAS,CAAC,MAAM;AAChBc,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACAF,IAAAA,IAAI,CAACI,SAAL,CAAe,EAAf;AACC,GAHQ,EAGN,CAACJ,IAAI,CAACK,UAAN,CAHM,CAAT;;AAMA,QAAMC,YAAY,GAAG,MAAOC,GAAP,IAAe;AAAC;AACjCP,IAAAA,IAAI,CAACQ,OAAL,CAAa,IAAb;AACA,QAAIC,QAAQ,GAAGF,GAAG,CAACG,MAAJ,CAAWC,KAA1B;AACAX,IAAAA,IAAI,CAACI,SAAL,CAAeK,QAAf;AACA,UAAMf,UAAU,CAACM,IAAI,CAACK,UAAN,EAAkBI,QAAlB,CAAhB,CAJgC,CAIY;;AAC5C,UAAMT,IAAI,CAACY,iBAAL,CAAuB;AAAEpB,MAAAA,gBAAgB,EAAEA;AAApB,KAAvB,CAAN;AAEA,UAAMQ,IAAI,CAACa,OAAL,CAAab,IAAI,CAACK,UAAlB,EAA8BI,QAA9B,CAAN;AACAT,IAAAA,IAAI,CAACQ,OAAL,CAAa,KAAb;AAEAZ,IAAAA,kBAAkB,GAAGH,aAAa,CAAC,CAAD,CAAb,CAAiBqB,SAAtC;AACAjB,IAAAA,YAAY,GAAGJ,aAAa,CAAC,CAAD,CAAb,CAAiBsB,YAAhC;AAEH,GAbD,CAb4C,CA0B3C;;;AAGD,SAEQ,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAgC,IAAA,SAAS,EAAEZ,OAAO,CAACa,WAAnD;AAAiE,IAAA,MAAM,EAAC,MAAxE;AAA+E,IAAA,IAAI,EAAC,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI,oBAAC,MAAD;AAEI,IAAA,OAAO,EAAC,kCAFZ;AAGI,IAAA,EAAE,EAAC,MAHP;AAII,IAAA,KAAK,EAAC,MAJV;AAKI,IAAA,KAAK,EAAEhB,IAAI,CAACiB,MALhB;AAMI,IAAA,QAAQ,EAAEX,YANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKN,IAAI,CAACkB,WAAL,CAAiBC,GAAjB,CAAqB,CAACZ,GAAD,EAAMa,CAAN,KAAa,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,CAAf;AAAkB,IAAA,KAAK,EAAEb,GAAG,CAACO,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCP,GAAG,CAACc,IAA7C,CAAlC,CAPL,CAFJ,CAFR;AAgBH,CA7C0B,CAApB","sourcesContent":["import React,{useEffect} from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { datalistaAlumnos, dataCriterios, getAlumnos } from '../../servicios/api';\r\nimport { useStyles } from './dialogos_calificacion';\r\nexport var unidadCalificacion, id_criterios;\r\n\r\nexport const SelectTemas = React.memo((data) => {\r\n    console.log('memo sect temas')\r\n\r\n    //const [unidad, setUnidad] = React.useState('');\r\n    const estilos = useStyles();\r\n    console.log('selctMterias')\r\n\r\n    useEffect(() => {\r\n    console.log('limpiar lista de temas anteriores')\r\n    data.setUnidad('')\r\n    }, [data.MATERIA_ID])\r\n\r\n\r\n    const _obtenerTema = async (tem) => {//inico\r\n        data.setOpen(true)\r\n        let numTemas = tem.target.value;\r\n        data.setUnidad(numTemas);\r\n        await getAlumnos(data.MATERIA_ID, numTemas);//LISTA DE ALUMNOS  Pendiene mandar unidad que es el tema #\r\n        await data.setcalificaciones({ datalistaAlumnos: datalistaAlumnos });\r\n\r\n        await data.updates(data.MATERIA_ID, numTemas)\r\n        data.setOpen(false)\r\n\r\n        unidadCalificacion = dataCriterios[0].numUnidad\r\n        id_criterios = dataCriterios[0].idcat_Unidad\r\n\r\n    }//fin\r\n\r\n\r\n    return (\r\n        \r\n            <FormControl variant=\"outlined\" className={estilos.formControl}  margin=\"none\" size=\"small\">\r\n                <InputLabel id=\"demo-simple-select-outlined-labe\">Tema</InputLabel>\r\n                <Select\r\n               \r\n                    labelId=\"demo-simple-select-outlined-labe\"\r\n                    id=\"Tema\"\r\n                    label=\"Tema\"\r\n                    value={data.unidad}\r\n                    onChange={_obtenerTema}>\r\n                    {data.listasTemas.map((tem, i) => (<MenuItem key={i} value={tem.numUnidad}>{tem.tema}</MenuItem>))}\r\n                </Select>\r\n            </FormControl>\r\n        \r\n    );\r\n})"]},"metadata":{},"sourceType":"module"}