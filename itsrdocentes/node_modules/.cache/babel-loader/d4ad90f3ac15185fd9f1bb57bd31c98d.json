{"ast":null,"code":"var _jsxFileName = \"E:\\\\Certificados\\\\itsrdocentes\\\\itsrdocentes\\\\src\\\\componentes\\\\contenedores\\\\docente_calificaciones\\\\tabla_calificaciones.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport MaterialTable from 'material-table';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport SaveIcon from '@material-ui/icons/Save';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport moment from 'moment';\nimport swal from 'sweetalert';\nimport './calificaciones.css';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useStyles } from './dialogos_calificacion';\nimport { getTemas, dataPeriodo, datalista, getAlumnos, getAdmiFechas } from '../../servicios/api';\nimport { datalistaAlumnos, getCriterios, dataCriterios } from '../../servicios/api';\nimport { putCriteriosc1, putCriteriosc2, putCriteriosc3, putCriteriosc4 } from '../../servicios/api';\nimport { crearCalificacion, updateCalificaion, dataFechasCierre } from '../../servicios/api';\nimport { dataMateria } from '../../../home';\nexport var unidad_Tema;\nvar ccx1 = 0,\n    ccx2 = 0,\n    ccx3 = 0,\n    ccx4 = 0,\n    unidadCalificacion,\n    id_criterios;\nvar crt1 = 'criterio_1',\n    crt2 = 'criterio_2',\n    crt3 = 'criterio_3',\n    crt4 = 'criterio_4';\nvar idDocenteActual, idMateriaActual; // fun buscarTtema\n\nvar materia, unidad, grupo;\nexport const MaterialTableDemo = () => {\n  //inicio del componente\n  const estilos = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [calificaciones, setcalificaciones] = React.useState({\n    datalistaAlumnos\n  });\n  const [listasTemas, setListas] = React.useState([]);\n  const [MATERIA_ID, setMATERIA_ID] = React.useState([]);\n  const [materia, setMateria] = React.useState('');\n  const [unidad, setUnidad] = React.useState('');\n  const [cierre, setCierre] = React.useState(false);\n  const [minimo, setMinimo] = React.useState(false);\n  const [activo, setActivo] = React.useState(true);\n  const BC1 = useRef();\n  const BC2 = useRef();\n  const BC3 = useRef();\n  const BC4 = useRef(); //let get_materia_id;\n\n  const fecha_actual = moment(new Date('2020-03-31')).format('YYYY-MM-DD'); //moment(new Date()).format('DD-MM-YYYY');\n\n  useEffect(() => {\n    console.log(BC1.current.style.display = 'none');\n    BC2.current.style.display = 'none';\n    BC3.current.style.display = 'none';\n    BC4.current.style.display = 'none'; // document.getElementById('porcentajeC1').disabled = true;\n\n    async function fechasGet() {\n      //establese el cieere de acta de acuerdo la fecha actual\n      try {\n        await getAdmiFechas();\n        var primera = moment(dataFechasCierre[0].primera_entrega).format('YYYY-MM-DD');\n        var segunda = moment(dataFechasCierre[0].segunda_entrega).format('YYYY-MM-DD');\n        var tercera = moment(dataFechasCierre[0].tercera_entrega).format('YYYY-MM-DD');\n\n        if (fecha_actual <= primera) {\n          let rest = moment(fecha_actual).subtract(2, 'month');\n          setCierre(primera);\n          setMinimo(moment(rest).format('YYYY-MM-DD'));\n        } else if (fecha_actual <= segunda) {\n          setCierre(segunda);\n          setMinimo(primera);\n        } else if (fecha_actual <= tercera) {\n          setCierre(tercera);\n          setMinimo(segunda);\n        } else {\n          console.log(\"Sin fechas de cierre definidas por el momento \");\n        }\n      } catch (error) {//pendiente\n      }\n    }\n\n    fechasGet();\n  }, []);\n\n  const enviarCriteriosc1 = async (porcentageC1, criterio1) => {\n    //parametros update periodo, materia, unidad, grupo\n    let materia = dataCriterios[0].materias_idmaterias;\n    let unidad = dataCriterios[0].numUnidad;\n    grupo = dataCriterios[0].asingnacion_grupo_id;\n    await putCriteriosc1(materia, unidad, grupo, porcentageC1, criterio1);\n    await updates();\n  }; //fin\n\n\n  const enviarCriteriosc2 = async (porcentageC1, criterio1) => {\n    //inicio guardar porcentaje 2 y criterio 2\n    let materia = dataCriterios[0].materias_idmaterias;\n    let unidad = dataCriterios[0].numUnidad;\n    grupo = dataCriterios[0].asingnacion_grupo_id;\n    await putCriteriosc2(materia, unidad, grupo, porcentageC1, criterio1);\n    await updates();\n  }; //fin\n\n\n  const enviarCriteriosc3 = async (porcentageC1, criterio1) => {\n    //inicio guardar porcentaje 3 y criterio 3\n    let materia = dataCriterios[0].materias_idmaterias;\n    let unidad = dataCriterios[0].numUnidad;\n    grupo = dataCriterios[0].asingnacion_grupo_id;\n    await putCriteriosc3(materia, unidad, grupo, porcentageC1, criterio1);\n    await updates();\n  }; //fin\n\n\n  const enviarCriteriosc4 = async (porcentageC4, criterio4) => {\n    //inicio guardar porcentaje 3 y criterio 3\n    let materia = dataCriterios[0].materias_idmaterias;\n    let unidad = dataCriterios[0].numUnidad;\n    grupo = dataCriterios[0].asingnacion_grupo_id;\n    await putCriteriosc4(materia, unidad, grupo, porcentageC4, criterio4);\n    await updates();\n  }; //fin\n\n\n  const updates = async () => {\n    //actualiza los griterios despues de incertar en la db\n    console.log(MATERIA_ID + ' actualizar vista ' + unidad);\n    await getCriterios(MATERIA_ID, unidad); // LISTA DE CRITERIO getTem\n\n    await Promise.all([ccx1 = dataCriterios[0].porcentageC1, ccx2 = dataCriterios[0].porcentageC2, ccx3 = dataCriterios[0].porcentageC3, ccx4 = dataCriterios[0].porcentageC4, crt1 = dataCriterios[0].criterio1, crt2 = dataCriterios[0].criterio2, crt3 = dataCriterios[0].criterio3, crt4 = dataCriterios[0].criterio4]);\n    BC1.current.value = ccx1;\n    BC2.current.value = ccx2;\n    BC3.current.value = ccx3;\n    BC4.current.value = ccx4;\n    BC1.current.style.display = 'block';\n    BC2.current.style.display = 'block';\n    BC3.current.style.display = 'block';\n    BC4.current.style.display = 'block';\n  };\n\n  const buscarTema = async materiaid => {\n    //inicio selec materia en la vista\n    setListas([]); //actualiza el la lista de materias actual\n\n    await setcalificaciones({\n      datalistaAlumnos: []\n    });\n    idDocenteActual = dataMateria[0].id_docente;\n    idMateriaActual = materiaid.target.value;\n    setMateria(idMateriaActual);\n    setMATERIA_ID(idMateriaActual); //actualizar al estado\n\n    await getTemas(idDocenteActual, idMateriaActual, minimo, cierre);\n    setListas(datalista); //actualiza el la lista de materias actual\n  }; //fi\n\n\n  const obtenerTema = async tem => {\n    //inico\n    setOpen(true);\n    let numTemas = tem.target.value;\n    setUnidad(numTemas);\n    await getAlumnos(MATERIA_ID, numTemas); //LISTA DE ALUMNOS  Pendiene mandar unidad que es el tema #\n\n    await setcalificaciones({\n      datalistaAlumnos: datalistaAlumnos\n    });\n    await updates();\n    /* await getCriterios(MATERIA_ID, numTemas);// LISTA DE CRITERIO getTem\r\n     await Promise.all([\r\n       ccx1 = dataCriterios[0].porcentageC1,\r\n       ccx2 = dataCriterios[0].porcentageC2,\r\n       ccx3 = dataCriterios[0].porcentageC3,\r\n       ccx4 = dataCriterios[0].porcentageC4,\r\n       crt1 = dataCriterios[0].criterio1,\r\n       crt2 = dataCriterios[0].criterio2,\r\n       crt3 = dataCriterios[0].criterio3,\r\n       crt4 = dataCriterios[0].criterio4]);\r\n       BC1.current.value = ccx1\r\n     BC2.current.value = ccx2\r\n     BC3.current.value = ccx3\r\n     BC4.current.value = ccx4\r\n       setOpen(false)\r\n     BC1.current.style.display = 'block'\r\n     BC2.current.style.display = 'block'\r\n     BC3.current.style.display = 'block'\r\n     BC4.current.style.display = 'block'*/\n\n    setOpen(false);\n    unidadCalificacion = dataCriterios[0].numUnidad; //public unidad del criterio seleccinado\n\n    id_criterios = dataCriterios[0].idcat_Unidad; //public id_criterios del criterio seleccinado\n  }; //fin\n\n\n  const guardarPromedio = async datos => {\n    //inicio  enviar el promedio asignado en la tabla captura_calificacion\n    let bandera = datos.materiaDocente_id;\n    let idcalificacion = datos.idcalificaciones;\n\n    if (bandera) {\n      if (datos.calR2 === null && datos.calR3 === null && datos.calR4 === null) {\n        datos.calR2 = 0;\n        datos.calR3 = 0;\n        datos.calR4 = 0;\n      } else if (datos.calR3 === null && datos.calR4 === null) {\n        datos.calR3 = 0;\n        datos.calR4 = 0;\n      } else if (datos.calR4 === null) {\n        datos.calR4 = 0;\n      }\n\n      await updateCalificaion(idcalificacion, datos);\n    } else {\n      //crear registro para el alumno en registro calificacion\n      await crearCalificacion(datos, unidadCalificacion, id_criterios);\n      await getAlumnos(MATERIA_ID, unidadCalificacion); //LISTA DE ALUMNOS\n\n      await setcalificaciones({\n        datalistaAlumnos: datalistaAlumnos\n      });\n    }\n  }; //fin\n\n\n  const guardarPorcentaje_c1 = async () => {\n    //inicio\n    var input = document.getElementById('porcentajeC1');\n    input.addEventListener('input', function () {\n      if (this.value.length > 2) this.value = this.value.slice(0, 2);\n    });\n\n    if (input.value <= 100) {\n      if (input.value.length === 2) {\n        swal(\"Describa el nombre del creterio:\", {\n          content: \"input\",\n          closeOnClickOutside: false\n        }).then(comentario => {\n          if (comentario) {\n            //enviar porcentage y comentario\n            enviarCriteriosc1(input.value, comentario).then(res => {\n              console.log(res);\n            });\n          } else {\n            alert(\"No puede estar vacio\");\n          }\n        });\n      }\n    } else {\n      alert(\"no puede exeder de 100 %\");\n    }\n  }; //fin\n\n\n  const guardarPorcentaje_c2 = e => {\n    //inicio\n    var input2 = document.getElementById('porcentajeC2'); //inicio 1\n\n    input2.addEventListener('input', function () {\n      if (this.value.length > 2) this.value = this.value.slice(0, 2);\n    });\n\n    if (input2.value <= 100) {\n      if (input2.value.length === 2) {\n        //ejecutar metodo de guardar\n        swal(\"describa el nombre del creterio:\", {\n          content: \"input\",\n          closeOnClickOutside: false\n        }).then(comentario => {\n          if (comentario) {\n            console.log(\"estos es :\" + unidadCalificacion + \"  y \" + idMateriaActual);\n            enviarCriteriosc2(input2.value, comentario);\n          } else {\n            console.log(\"No puede estar vacio\");\n          }\n        });\n      }\n    } else {\n      alert(\"No puede exeder de 100 %\");\n    }\n  }; //fin\n\n\n  const guardarPorcentaje_c3 = e => {\n    //inicio\n    var input3 = document.getElementById('porcentajeC3'); //inicio 1\n\n    input3.addEventListener('input', function () {\n      if (this.value.length > 2) this.value = this.value.slice(0, 2);\n    });\n\n    if (input3.value <= 100) {\n      if (input3.value.length === 2) {\n        swal(\"describa el nombre del creterio:\", {\n          content: \"input\",\n          closeOnClickOutside: false\n        }).then(comentario => {\n          if (comentario) {\n            enviarCriteriosc3(input3.value, comentario);\n          } else {\n            alert(\"No puede estar vacio \");\n          }\n        });\n      }\n    } else {\n      alert(\"No puede exeder de 100 %\");\n    }\n  }; //fin\n\n\n  const guardarPorcentaje_c4 = e => {\n    //inicio\n    var input4 = document.getElementById('porcentajeC4'); //inicio 1\n\n    input4.addEventListener('input', function () {\n      if (this.value.length > 2) this.value = this.value.slice(0, 2);\n    });\n\n    if (input4.value <= 100) {\n      if (input4.value.length === 2) {\n        swal(\"Describa el nombre del creterio:\", {\n          content: \"input\",\n          closeOnClickOutside: false\n        }).then(comentario => {\n          if (comentario) {\n            enviarCriteriosc4(input4.value, comentario);\n          } else {\n            alert(\"No puede estar vacio \");\n          }\n        });\n      }\n    } else {\n      alert(\"No puede exeder de 100 %\");\n    }\n  }; //fin\n\n\n  const [alumnos, setAlumnos] = React.useState({\n    // datos de la tabla calificacion\n    columns: [{\n      title: 'Nª',\n      field: 'nm',\n      editable: 'never'\n    }, {\n      title: 'Control',\n      field: 'control',\n      editable: 'never',\n      disablePadding: true,\n      minWidth: 10\n    }, {\n      title: 'Nombre',\n      field: 'nameAlumno',\n      editable: 'never',\n      disablePadding: true\n    }, {\n      title: 'Curso',\n      field: 'curso',\n      editable: 'never',\n      disablePadding: true,\n      minWidth: 10\n    }, {\n      title: 'Opcion',\n      field: 'opcion',\n      editable: 'never',\n      disablePadding: true,\n      minWidth: 10\n    }, {\n      title: 'C1',\n      field: 'calR1',\n      disablePadding: true,\n      minWidth: 10\n    }, {\n      title: 'C2',\n      field: 'calR2',\n      disablePadding: true,\n      minWidth: 10\n    }, {\n      title: 'C3',\n      field: 'calR3',\n      disablePadding: true,\n      minWidth: 10\n    }, {\n      title: 'C4',\n      field: 'calR4',\n      disablePadding: true,\n      minWidth: 10\n    }, {\n      title: '#',\n      field: '#',\n      editable: 'never',\n      size: 'small',\n      disablePadding: true\n    }, {\n      title: React.createElement(\"input\", {\n        className: \"inputTemas\",\n        id: \"porcentajeC1\",\n        placeholder: \"C1\",\n        style: {\n          width: '4ch'\n        },\n        ref: BC1,\n        onChange: guardarPorcentaje_c1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }),\n      field: 'calCriterio1',\n      editable: 'never',\n      minWidth: 10,\n      disablePadding: true\n    }, {\n      title: React.createElement(\"input\", {\n        className: \"inputTemas\",\n        id: \"porcentajeC2\",\n        placeholder: \"C2\",\n        style: {\n          width: '4ch'\n        },\n        ref: BC2,\n        onChange: guardarPorcentaje_c2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }),\n      field: 'calCriterio2',\n      editable: 'never',\n      minWidth: 10,\n      disablePadding: true\n    }, {\n      title: React.createElement(\"input\", {\n        className: \"inputTemas\",\n        id: \"porcentajeC3\",\n        placeholder: \"C3\",\n        style: {\n          width: '4ch'\n        },\n        ref: BC3,\n        onChange: guardarPorcentaje_c3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }),\n      field: 'calCriterio3',\n      editable: 'never',\n      disablePadding: true\n    }, {\n      title: React.createElement(\"input\", {\n        className: \"inputTemas\",\n        id: \"porcentajeC4\",\n        placeholder: \"C4\",\n        style: {\n          width: '4ch'\n        },\n        ref: BC4,\n        onChange: guardarPorcentaje_c4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }),\n      field: 'calCriterio4',\n      editable: 'never',\n      disablePadding: true\n    }, {\n      title: 'Total',\n      field: 'calificaciontotal',\n      editable: 'never',\n      disablePadding: true\n    }]\n  }); //\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, React.createElement(Backdrop, {\n    className: estilos.backdrop,\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }, \"INSTITUTO TECNOLOGICO SUPERIOR DE LOS RIOS\")), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    className: estilos.paperperiodos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, \"PERIODO: \", dataPeriodo[0].rango)), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    className: estilos.paperperiodos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, \"CIERRE DE ACTA: \", cierre)), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: estilos.paperAvatar,\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, React.createElement(Chip, {\n    size: \"small\",\n    avatar: React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, ccx1),\n    label: crt1,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    size: \"small\",\n    avatar: React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, ccx2),\n    label: crt2,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    size: \"small\",\n    avatar: React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, ccx3),\n    label: crt3,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    size: \"small\",\n    avatar: React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, ccx4),\n    label: crt4,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    className: estilos.papermaterias,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: estilos.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"InputLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, \"Materia\"), React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined\",\n    id: \"materia\",\n    onChange: buscarTema,\n    label: \"Materia\",\n    value: materia,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, dataMateria.map(materias => React.createElement(MenuItem, {\n    key: materias.nm,\n    value: materias.idMateria,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, materias.nombre + ' (' + materias.semestre + \"/\" + materias.nomenclatura + \") \" + materias.nombreCorto)))))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    className: estilos.papermaterias,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: estilos.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-labe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, \"Unidad\"), React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-labe\",\n    id: \"unidad\",\n    label: \"Unidad\",\n    value: unidad,\n    onChange: obtenerTema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }, listasTemas.map((tem, i) => React.createElement(MenuItem, {\n    key: i,\n    value: tem.numUnidad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, tem.tema)))))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    title: \"Captura de calificaciones\",\n    columns: alumnos.columns //columnas\n    ,\n    data: calificaciones.datalistaAlumnos //filas\n    ,\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setcalificaciones(prevState => {\n              const datalistaAlumnos = [...prevState.datalistaAlumnos]; //obtenr data\n\n              console.log(newData.calCriterio1 = newData.calR1 * (ccx1 / 100));\n              console.log(newData.calCriterio2 = newData.calR2 * (ccx2 / 100));\n              console.log(newData.calCriterio3 = newData.calR3 * (ccx3 / 100));\n              console.log(newData.calCriterio4 = newData.calR4 * (ccx4 / 100));\n              console.log(newData.calificaciontotal = parseInt(newData.calCriterio1) + parseInt(newData.calCriterio2) + parseInt(newData.calCriterio3) + parseInt(newData.calCriterio4));\n              console.log(newData); //estado fila modificado\n\n              datalistaAlumnos[datalistaAlumnos.indexOf(oldData)] = newData;\n              guardarPromedio(newData);\n              return { ...prevState,\n                datalistaAlumnos\n              };\n            });\n          }\n        }, 600);\n      })\n    },\n    options: {\n      headerStyle: {\n        backgroundColor: '#01579b',\n        color: '#FFF',\n        size: 'small'\n      },\n      rowStyle: {\n        white: 'pre'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450\n    },\n    __self: this\n  }, \"*O: Ordinario   *1:Primera oportunidad   *NA: No Alcanza\"), React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }, \"*R: Repeticion   *2:Segunda oportunidad\"), React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452\n    },\n    __self: this\n  }, \"*E: Especial\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    startIcon: React.createElement(SaveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455\n    },\n    __self: this\n  }, \"Descargar Reporte de Calificaciones\"))));\n};\nexport default MaterialTableDemo;","map":{"version":3,"sources":["E:/Certificados/itsrdocentes/itsrdocentes/src/componentes/contenedores/docente_calificaciones/tabla_calificaciones.jsx"],"names":["React","useEffect","useRef","MaterialTable","Button","Grid","Paper","SaveIcon","InputLabel","FormControl","Select","MenuItem","Backdrop","CircularProgress","moment","swal","Chip","Avatar","useStyles","getTemas","dataPeriodo","datalista","getAlumnos","getAdmiFechas","datalistaAlumnos","getCriterios","dataCriterios","putCriteriosc1","putCriteriosc2","putCriteriosc3","putCriteriosc4","crearCalificacion","updateCalificaion","dataFechasCierre","dataMateria","unidad_Tema","ccx1","ccx2","ccx3","ccx4","unidadCalificacion","id_criterios","crt1","crt2","crt3","crt4","idDocenteActual","idMateriaActual","materia","unidad","grupo","MaterialTableDemo","estilos","open","setOpen","useState","calificaciones","setcalificaciones","listasTemas","setListas","MATERIA_ID","setMATERIA_ID","setMateria","setUnidad","cierre","setCierre","minimo","setMinimo","activo","setActivo","BC1","BC2","BC3","BC4","fecha_actual","Date","format","console","log","current","style","display","fechasGet","primera","primera_entrega","segunda","segunda_entrega","tercera","tercera_entrega","rest","subtract","error","enviarCriteriosc1","porcentageC1","criterio1","materias_idmaterias","numUnidad","asingnacion_grupo_id","updates","enviarCriteriosc2","enviarCriteriosc3","enviarCriteriosc4","porcentageC4","criterio4","Promise","all","porcentageC2","porcentageC3","criterio2","criterio3","value","buscarTema","materiaid","id_docente","target","obtenerTema","tem","numTemas","idcat_Unidad","guardarPromedio","datos","bandera","materiaDocente_id","idcalificacion","idcalificaciones","calR2","calR3","calR4","guardarPorcentaje_c1","input","document","getElementById","addEventListener","length","slice","content","closeOnClickOutside","then","comentario","res","alert","guardarPorcentaje_c2","e","input2","guardarPorcentaje_c3","input3","guardarPorcentaje_c4","input4","alumnos","setAlumnos","columns","title","field","editable","disablePadding","minWidth","size","width","backdrop","paperperiodos","rango","paperAvatar","papermaterias","formControl","map","materias","nm","idMateria","nombre","semestre","nomenclatura","nombreCorto","i","tema","onRowUpdate","newData","oldData","resolve","setTimeout","prevState","calCriterio1","calR1","calCriterio2","calCriterio3","calCriterio4","calificaciontotal","parseInt","indexOf","headerStyle","backgroundColor","color","rowStyle","white"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport moment from 'moment';\r\nimport swal from 'sweetalert';\r\nimport './calificaciones.css';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useStyles } from './dialogos_calificacion';\r\nimport { getTemas, dataPeriodo, datalista, getAlumnos, getAdmiFechas } from '../../servicios/api';\r\nimport { datalistaAlumnos, getCriterios, dataCriterios } from '../../servicios/api';\r\nimport { putCriteriosc1, putCriteriosc2, putCriteriosc3, putCriteriosc4 } from '../../servicios/api';\r\nimport { crearCalificacion, updateCalificaion, dataFechasCierre } from '../../servicios/api';\r\nimport { dataMateria } from '../../../home';\r\nexport var unidad_Tema;\r\n\r\nvar ccx1 = 0, ccx2 = 0, ccx3 = 0, ccx4 = 0, unidadCalificacion, id_criterios;\r\nvar crt1 = 'criterio_1', crt2 = 'criterio_2', crt3 = 'criterio_3', crt4 = 'criterio_4';\r\nvar idDocenteActual, idMateriaActual; // fun buscarTtema\r\nvar materia, unidad, grupo;\r\n\r\n\r\n\r\n\r\n\r\nexport const MaterialTableDemo = () => {//inicio del componente\r\n\r\n  const estilos = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [calificaciones, setcalificaciones] = React.useState({ datalistaAlumnos });\r\n  const [listasTemas, setListas] = React.useState([]);\r\n  const [MATERIA_ID, setMATERIA_ID] = React.useState([]);\r\n  const [materia, setMateria] = React.useState('');\r\n  const [unidad, setUnidad] = React.useState('');\r\n  const [cierre, setCierre] = React.useState(false);\r\n  const [minimo, setMinimo] = React.useState(false);\r\n  const [activo, setActivo] = React.useState(true);\r\n  const BC1 = useRef();\r\n  const BC2 = useRef();\r\n  const BC3 = useRef();\r\n  const BC4 = useRef();\r\n\r\n  //let get_materia_id;\r\n  const fecha_actual = moment(new Date('2020-03-31')).format('YYYY-MM-DD'); //moment(new Date()).format('DD-MM-YYYY');\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(BC1.current.style.display = 'none')\r\n    BC2.current.style.display = 'none'\r\n    BC3.current.style.display = 'none'\r\n    BC4.current.style.display = 'none'\r\n    // document.getElementById('porcentajeC1').disabled = true;\r\n    async function fechasGet() {//establese el cieere de acta de acuerdo la fecha actual\r\n      try {\r\n        await getAdmiFechas()\r\n        var primera = moment(dataFechasCierre[0].primera_entrega).format('YYYY-MM-DD');\r\n        var segunda = moment(dataFechasCierre[0].segunda_entrega).format('YYYY-MM-DD');\r\n        var tercera = moment(dataFechasCierre[0].tercera_entrega).format('YYYY-MM-DD');\r\n\r\n        if (fecha_actual <= primera) {\r\n          let rest = moment(fecha_actual).subtract(2, 'month');\r\n          setCierre(primera)\r\n          setMinimo(moment(rest).format('YYYY-MM-DD'))\r\n        } else if (fecha_actual <= segunda) {\r\n          setCierre(segunda)\r\n          setMinimo(primera)\r\n        } else if (fecha_actual <= tercera) {\r\n          setCierre(tercera)\r\n          setMinimo(segunda)\r\n        } else {\r\n          console.log(\"Sin fechas de cierre definidas por el momento \")\r\n        }\r\n      } catch (error) {\r\n        //pendiente\r\n      }\r\n    }\r\n\r\n    fechasGet()\r\n\r\n  }, [])\r\n\r\n\r\n\r\n  const enviarCriteriosc1= async (porcentageC1, criterio1) => {//parametros update periodo, materia, unidad, grupo\r\n    let materia = dataCriterios[0].materias_idmaterias;\r\n    let unidad = dataCriterios[0].numUnidad;\r\n    grupo = dataCriterios[0].asingnacion_grupo_id;\r\n    await putCriteriosc1(materia, unidad, grupo, porcentageC1, criterio1)\r\n    await updates()\r\n  }//fin\r\n  \r\n  \r\n   const enviarCriteriosc2 = async (porcentageC1, criterio1) => {//inicio guardar porcentaje 2 y criterio 2\r\n    let materia = dataCriterios[0].materias_idmaterias;\r\n   let unidad = dataCriterios[0].numUnidad;\r\n    grupo = dataCriterios[0].asingnacion_grupo_id;\r\n    await putCriteriosc2(materia, unidad, grupo, porcentageC1, criterio1)\r\n    await updates()\r\n  }//fin\r\n  \r\n  \r\n   const enviarCriteriosc3 = async(porcentageC1, criterio1) => {//inicio guardar porcentaje 3 y criterio 3\r\n    let materia = dataCriterios[0].materias_idmaterias;\r\n    let unidad = dataCriterios[0].numUnidad;\r\n    grupo = dataCriterios[0].asingnacion_grupo_id;\r\n    await putCriteriosc3(materia, unidad, grupo, porcentageC1, criterio1)\r\n    await updates()\r\n  }//fin\r\n  \r\n   const enviarCriteriosc4 = async (porcentageC4, criterio4) => {//inicio guardar porcentaje 3 y criterio 3\r\n    let materia = dataCriterios[0].materias_idmaterias;\r\n    let unidad = dataCriterios[0].numUnidad;\r\n    grupo = dataCriterios[0].asingnacion_grupo_id;\r\n    await putCriteriosc4(materia, unidad, grupo, porcentageC4, criterio4)\r\n    await updates()\r\n  }//fin\r\n  \r\n  const updates = async () => {//actualiza los griterios despues de incertar en la db\r\n    console.log(MATERIA_ID+' actualizar vista '+unidad)\r\n    await getCriterios(MATERIA_ID, unidad);// LISTA DE CRITERIO getTem\r\n    await Promise.all([\r\n      ccx1 = dataCriterios[0].porcentageC1,\r\n      ccx2 = dataCriterios[0].porcentageC2,\r\n      ccx3 = dataCriterios[0].porcentageC3,\r\n      ccx4 = dataCriterios[0].porcentageC4,\r\n      crt1 = dataCriterios[0].criterio1,\r\n      crt2 = dataCriterios[0].criterio2,\r\n      crt3 = dataCriterios[0].criterio3,\r\n      crt4 = dataCriterios[0].criterio4]);\r\n\r\n    BC1.current.value = ccx1\r\n    BC2.current.value = ccx2\r\n    BC3.current.value = ccx3\r\n    BC4.current.value = ccx4\r\n\r\n    \r\n    BC1.current.style.display = 'block'\r\n    BC2.current.style.display = 'block'\r\n    BC3.current.style.display = 'block'\r\n    BC4.current.style.display = 'block'\r\n   \r\n  }\r\n\r\n\r\n \r\n\r\n\r\n  const buscarTema = async materiaid => {//inicio selec materia en la vista\r\n    setListas([])//actualiza el la lista de materias actual\r\n    await setcalificaciones({ datalistaAlumnos: [] });\r\n    idDocenteActual = dataMateria[0].id_docente;\r\n    idMateriaActual = materiaid.target.value;\r\n    setMateria(idMateriaActual)\r\n    setMATERIA_ID(idMateriaActual);//actualizar al estado\r\n    await getTemas(idDocenteActual, idMateriaActual, minimo, cierre);\r\n    setListas(datalista)//actualiza el la lista de materias actual\r\n  };//fi\r\n\r\n  const obtenerTema = async (tem) => {//inico\r\n    setOpen(true)\r\n    let numTemas = tem.target.value;\r\n    setUnidad(numTemas);\r\n    await getAlumnos(MATERIA_ID, numTemas);//LISTA DE ALUMNOS  Pendiene mandar unidad que es el tema #\r\n    await setcalificaciones({ datalistaAlumnos: datalistaAlumnos });\r\n    await updates()\r\n   /* await getCriterios(MATERIA_ID, numTemas);// LISTA DE CRITERIO getTem\r\n    await Promise.all([\r\n      ccx1 = dataCriterios[0].porcentageC1,\r\n      ccx2 = dataCriterios[0].porcentageC2,\r\n      ccx3 = dataCriterios[0].porcentageC3,\r\n      ccx4 = dataCriterios[0].porcentageC4,\r\n      crt1 = dataCriterios[0].criterio1,\r\n      crt2 = dataCriterios[0].criterio2,\r\n      crt3 = dataCriterios[0].criterio3,\r\n      crt4 = dataCriterios[0].criterio4]);\r\n\r\n    BC1.current.value = ccx1\r\n    BC2.current.value = ccx2\r\n    BC3.current.value = ccx3\r\n    BC4.current.value = ccx4\r\n\r\n    setOpen(false)\r\n    BC1.current.style.display = 'block'\r\n    BC2.current.style.display = 'block'\r\n    BC3.current.style.display = 'block'\r\n    BC4.current.style.display = 'block'*/\r\n    setOpen(false)\r\n\r\n    unidadCalificacion = dataCriterios[0].numUnidad;//public unidad del criterio seleccinado\r\n    id_criterios = dataCriterios[0].idcat_Unidad;//public id_criterios del criterio seleccinado\r\n  }//fin\r\n\r\n  const guardarPromedio = async (datos) => {//inicio  enviar el promedio asignado en la tabla captura_calificacion\r\n    let bandera = datos.materiaDocente_id;\r\n    let idcalificacion = datos.idcalificaciones;\r\n\r\n    if (bandera) {\r\n      if (datos.calR2 === null && datos.calR3 === null && datos.calR4 === null) {\r\n        datos.calR2 = 0;\r\n        datos.calR3 = 0;\r\n        datos.calR4 = 0;\r\n      } else if (datos.calR3 === null && datos.calR4 === null) {\r\n        datos.calR3 = 0;\r\n        datos.calR4 = 0;\r\n      } else if (datos.calR4 === null) {\r\n        datos.calR4 = 0;\r\n      }\r\n      await updateCalificaion(idcalificacion, datos)\r\n    } else {//crear registro para el alumno en registro calificacion\r\n      await crearCalificacion(datos, unidadCalificacion, id_criterios);\r\n      await getAlumnos(MATERIA_ID, unidadCalificacion);//LISTA DE ALUMNOS\r\n      await setcalificaciones({ datalistaAlumnos: datalistaAlumnos });\r\n    }\r\n  }//fin\r\n\r\n  const guardarPorcentaje_c1 = async () => {//inicio\r\n    var input = document.getElementById('porcentajeC1');\r\n    input.addEventListener('input', function () {\r\n      if (this.value.length > 2)\r\n        this.value = this.value.slice(0, 2);\r\n    })\r\n    if (input.value <= 100) {\r\n      if (input.value.length === 2) {\r\n        swal(\"Describa el nombre del creterio:\", {\r\n          content: \"input\",\r\n          closeOnClickOutside: false,\r\n        })\r\n          .then((comentario) => {\r\n            if (comentario) {\r\n              //enviar porcentage y comentario\r\n              enviarCriteriosc1(input.value, comentario).then(res => { console.log(res) })\r\n            } else {\r\n              alert(\"No puede estar vacio\")\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      alert(\"no puede exeder de 100 %\")\r\n    }\r\n  }//fin\r\n\r\n\r\n  const guardarPorcentaje_c2 = (e) => {//inicio\r\n    var input2 = document.getElementById('porcentajeC2');//inicio 1\r\n    input2.addEventListener('input', function () {\r\n      if (this.value.length > 2)\r\n        this.value = this.value.slice(0, 2);\r\n    })\r\n    if (input2.value <= 100) {\r\n      if (input2.value.length === 2) {\r\n        //ejecutar metodo de guardar\r\n        swal(\"describa el nombre del creterio:\", {\r\n          content: \"input\",\r\n          closeOnClickOutside: false,\r\n        })\r\n          .then((comentario) => {\r\n            if (comentario) {\r\n              console.log(\"estos es :\" + unidadCalificacion + \"  y \" + idMateriaActual)\r\n              enviarCriteriosc2(input2.value, comentario)\r\n            } else {\r\n              console.log(\"No puede estar vacio\")\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      alert(\"No puede exeder de 100 %\")\r\n    }\r\n  }//fin\r\n\r\n  const guardarPorcentaje_c3 = (e) => {//inicio\r\n    var input3 = document.getElementById('porcentajeC3');//inicio 1\r\n    input3.addEventListener('input', function () {\r\n      if (this.value.length > 2)\r\n        this.value = this.value.slice(0, 2);\r\n    })\r\n    if (input3.value <= 100) {\r\n      if (input3.value.length === 2) {\r\n        swal(\"describa el nombre del creterio:\", {\r\n          content: \"input\",\r\n          closeOnClickOutside: false,\r\n        })\r\n          .then((comentario) => {\r\n            if (comentario) {\r\n              enviarCriteriosc3(input3.value, comentario)\r\n            } else {\r\n              alert(\"No puede estar vacio \")\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      alert(\"No puede exeder de 100 %\")\r\n    }\r\n  }//fin\r\n\r\n  const guardarPorcentaje_c4 = (e) => {//inicio\r\n    var input4 = document.getElementById('porcentajeC4');//inicio 1\r\n    input4.addEventListener('input', function () {\r\n      if (this.value.length > 2)\r\n        this.value = this.value.slice(0, 2);\r\n    })\r\n    if (input4.value <= 100) {\r\n      if (input4.value.length === 2) {\r\n        swal(\"Describa el nombre del creterio:\", {\r\n          content: \"input\",\r\n          closeOnClickOutside: false,\r\n        })\r\n          .then((comentario) => {\r\n            if (comentario) {\r\n              enviarCriteriosc4(input4.value, comentario)\r\n            } else {\r\n              alert(\"No puede estar vacio \")\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      alert(\"No puede exeder de 100 %\")\r\n    }\r\n  }//fin\r\n\r\n\r\n  const [alumnos, setAlumnos] = React.useState({// datos de la tabla calificacion\r\n    columns: [\r\n      { title: 'Nª', field: 'nm', editable: 'never' },\r\n      { title: 'Control', field: 'control', editable: 'never', disablePadding: true, minWidth: 10 },\r\n      { title: 'Nombre', field: 'nameAlumno', editable: 'never', disablePadding: true },\r\n      { title: 'Curso', field: 'curso', editable: 'never', disablePadding: true, minWidth: 10 },\r\n      { title: 'Opcion', field: 'opcion', editable: 'never', disablePadding: true, minWidth: 10 },\r\n      { title: 'C1', field: 'calR1', disablePadding: true, minWidth: 10 },\r\n      { title: 'C2', field: 'calR2', disablePadding: true, minWidth: 10 },\r\n      { title: 'C3', field: 'calR3', disablePadding: true, minWidth: 10 },\r\n      { title: 'C4', field: 'calR4', disablePadding: true, minWidth: 10 },\r\n      { title: '#', field: '#', editable: 'never', size: 'small', disablePadding: true },\r\n      { title: <input className=\"inputTemas\" id=\"porcentajeC1\" placeholder=\"C1\" style={{ width: '4ch' }} ref={BC1} onChange={guardarPorcentaje_c1} ></input>, field: 'calCriterio1', editable: 'never', minWidth: 10, disablePadding: true },\r\n      { title: <input className=\"inputTemas\" id=\"porcentajeC2\" placeholder=\"C2\" style={{ width: '4ch' }} ref={BC2} onChange={guardarPorcentaje_c2} ></input>, field: 'calCriterio2', editable: 'never', minWidth: 10, disablePadding: true },\r\n      { title: <input className=\"inputTemas\" id=\"porcentajeC3\" placeholder=\"C3\" style={{ width: '4ch' }} ref={BC3} onChange={guardarPorcentaje_c3}  ></input>, field: 'calCriterio3', editable: 'never', disablePadding: true },\r\n      { title: <input className=\"inputTemas\" id=\"porcentajeC4\" placeholder=\"C4\" style={{ width: '4ch' }} ref={BC4} onChange={guardarPorcentaje_c4}  ></input>, field: 'calCriterio4', editable: 'never', disablePadding: true },\r\n      { title: 'Total', field: 'calificaciontotal', editable: 'never', disablePadding: true },\r\n    ]\r\n  })\r\n\r\n  //\r\n\r\n  return (\r\n    <div>\r\n      <Backdrop className={estilos.backdrop} open={open} >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <h3 >INSTITUTO TECNOLOGICO SUPERIOR DE LOS RIOS</h3>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper elevation={0} className={estilos.paperperiodos}>PERIODO: {dataPeriodo[0].rango}</Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper elevation={0} className={estilos.paperperiodos}>CIERRE DE ACTA: {cierre}</Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper className={estilos.paperAvatar} elevation={0} >\r\n            <Chip size=\"small\" avatar={<Avatar>{ccx1}</Avatar>} label={crt1} color=\"secondary\" />\r\n            <Chip size=\"small\" avatar={<Avatar>{ccx2}</Avatar>} label={crt2} color=\"secondary\" />\r\n            <Chip size=\"small\" avatar={<Avatar>{ccx3}</Avatar>} label={crt3} color=\"secondary\" />\r\n            <Chip size=\"small\" avatar={<Avatar>{ccx4}</Avatar>} label={crt4} color=\"secondary\" />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper elevation={0} className={estilos.papermaterias}>\r\n            <FormControl variant=\"outlined\" className={estilos.formControl}>\r\n              <InputLabel id=\"InputLabel\">Materia</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined\"\r\n                id=\"materia\"\r\n                onChange={buscarTema}\r\n                label=\"Materia\"\r\n                value={materia}>\r\n                {dataMateria.map((materias) => (<MenuItem key={materias.nm} value={materias.idMateria} >{materias.nombre + ' (' + materias.semestre + \"/\" + materias.nomenclatura + \") \" + materias.nombreCorto}</MenuItem>))}\r\n              </Select>\r\n            </FormControl>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper elevation={0} className={estilos.papermaterias}>\r\n            <FormControl variant=\"outlined\" className={estilos.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-labe\">Unidad</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-labe\"\r\n                id=\"unidad\"\r\n                label=\"Unidad\"\r\n                value={unidad}\r\n                onChange={obtenerTema}>\r\n                {listasTemas.map((tem, i) => (<MenuItem key={i} value={tem.numUnidad}>{tem.tema}</MenuItem>))}\r\n              </Select>\r\n            </FormControl>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}>\r\n          <Paper elevation={3} >\r\n            <MaterialTable\r\n              title=\"Captura de calificaciones\"\r\n              columns={alumnos.columns}//columnas\r\n              data={calificaciones.datalistaAlumnos}//filas\r\n              editable={\r\n                {\r\n                  onRowUpdate: (newData, oldData) =>\r\n                    new Promise(resolve => {\r\n                      setTimeout(() => {\r\n                        resolve();\r\n                        if (oldData) {\r\n                          setcalificaciones(prevState => {\r\n                            const datalistaAlumnos = [...prevState.datalistaAlumnos];//obtenr data\r\n                            console.log(newData.calCriterio1 = (newData.calR1 * (ccx1 / 100)))\r\n                            console.log(newData.calCriterio2 = (newData.calR2 * (ccx2 / 100)))\r\n                            console.log(newData.calCriterio3 = (newData.calR3 * (ccx3 / 100)))\r\n                            console.log(newData.calCriterio4 = (newData.calR4 * (ccx4 / 100)))\r\n                            console.log(newData.calificaciontotal = (parseInt(newData.calCriterio1) + parseInt(newData.calCriterio2) + parseInt(newData.calCriterio3) + parseInt(newData.calCriterio4)))\r\n                            console.log(newData)//estado fila modificado\r\n                            datalistaAlumnos[datalistaAlumnos.indexOf(oldData)] = newData;\r\n                            guardarPromedio(newData)\r\n                            return { ...prevState, datalistaAlumnos };\r\n                          });\r\n                        }\r\n                      }, 600);\r\n                    }),\r\n                }\r\n              }\r\n              options={{\r\n                headerStyle: {\r\n                  backgroundColor: '#01579b',\r\n                  color: '#FFF',\r\n                  size: 'small'\r\n                },\r\n                rowStyle: {\r\n                  white: 'pre',\r\n                }\r\n              }} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper >*O: Ordinario   *1:Primera oportunidad   *NA: No Alcanza</Paper>\r\n          <Paper >*R: Repeticion   *2:Segunda oportunidad</Paper>\r\n          <Paper >*E: Especial</Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            startIcon={<SaveIcon />}>\r\n            Descargar Reporte de Calificaciones\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default MaterialTableDemo;"]},"metadata":{},"sourceType":"module"}