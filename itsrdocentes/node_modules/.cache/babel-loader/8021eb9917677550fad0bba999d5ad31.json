{"ast":null,"code":"import toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\r\n * @name differenceInDays\r\n * @category Day Helpers\r\n * @summary Get the number of full days between the given dates.\r\n *\r\n * @description\r\n * Get the number of full day periods between the given dates.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} dateLeft - the later date\r\n * @param {Date|Number} dateRight - the earlier date\r\n * @returns {Number} the number of full days\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // How many full days are between\r\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\r\n * var result = differenceInDays(\r\n *   new Date(2012, 6, 2, 0, 0),\r\n *   new Date(2011, 6, 2, 23, 0)\r\n * )\r\n * //=> 365\r\n * // How many days are between\r\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\r\n * var result = differenceInDays(\r\n *   new Date(2011, 6, 3, 0, 1),\r\n *   new Date(2011, 6, 2, 23, 59)\r\n * )\r\n * //=> 0\r\n */\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","map":{"version":3,"sources":["E:/Certificados/heroku/pruevaparaproduccion/DOCENTES/itsrdocentes/node_modules/date-fns/esm/differenceInDays/index.js"],"names":["toDate","differenceInCalendarDays","compareAsc","requiredArgs","differenceInDays","dirtyDateLeft","dirtyDateRight","arguments","dateLeft","dateRight","sign","difference","Math","abs","setDate","getDate","isLastDayNotFull","result"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,wBAAP,MAAqC,sCAArC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,eAAe,SAASC,gBAAT,CAA0BC,aAA1B,EAAyCC,cAAzC,EAAyD;AACtEH,EAAAA,YAAY,CAAC,CAAD,EAAII,SAAJ,CAAZ;AACA,MAAIC,QAAQ,GAAGR,MAAM,CAACK,aAAD,CAArB;AACA,MAAII,SAAS,GAAGT,MAAM,CAACM,cAAD,CAAtB;AACA,MAAII,IAAI,GAAGR,UAAU,CAACM,QAAD,EAAWC,SAAX,CAArB;AACA,MAAIE,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASZ,wBAAwB,CAACO,QAAD,EAAWC,SAAX,CAAjC,CAAjB;AACAD,EAAAA,QAAQ,CAACM,OAAT,CAAiBN,QAAQ,CAACO,OAAT,KAAqBL,IAAI,GAAGC,UAA7C,EANsE,CAMZ;AAC1D;;AAEA,MAAIK,gBAAgB,GAAGd,UAAU,CAACM,QAAD,EAAWC,SAAX,CAAV,KAAoC,CAACC,IAA5D;AACA,MAAIO,MAAM,GAAGP,IAAI,IAAIC,UAAU,GAAGK,gBAAjB,CAAjB,CAVsE,CAUjB;;AAErD,SAAOC,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;AACD","sourcesContent":["import toDate from '../toDate/index.js';\r\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\r\nimport compareAsc from '../compareAsc/index.js';\r\nimport requiredArgs from '../_lib/requiredArgs/index.js';\r\n/**\r\n * @name differenceInDays\r\n * @category Day Helpers\r\n * @summary Get the number of full days between the given dates.\r\n *\r\n * @description\r\n * Get the number of full day periods between the given dates.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} dateLeft - the later date\r\n * @param {Date|Number} dateRight - the earlier date\r\n * @returns {Number} the number of full days\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // How many full days are between\r\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\r\n * var result = differenceInDays(\r\n *   new Date(2012, 6, 2, 0, 0),\r\n *   new Date(2011, 6, 2, 23, 0)\r\n * )\r\n * //=> 365\r\n * // How many days are between\r\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\r\n * var result = differenceInDays(\r\n *   new Date(2011, 6, 3, 0, 1),\r\n *   new Date(2011, 6, 2, 23, 59)\r\n * )\r\n * //=> 0\r\n */\r\n\r\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\r\n  requiredArgs(2, arguments);\r\n  var dateLeft = toDate(dirtyDateLeft);\r\n  var dateRight = toDate(dirtyDateRight);\r\n  var sign = compareAsc(dateLeft, dateRight);\r\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\r\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\r\n  // If so, result must be decreased by 1 in absolute value\r\n\r\n  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign;\r\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\r\n\r\n  return result === 0 ? 0 : result;\r\n}"]},"metadata":{},"sourceType":"module"}