{"ast":null,"code":"var _jsxFileName = \"E:\\\\Certificados\\\\itsrdocentes\\\\itsrdocentes\\\\src\\\\componentes\\\\contenedores\\\\docente_calificaciones\\\\Tabla_registro.js\";\nimport React, { useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { useStyles } from './dialogos_calificacion';\nimport { crearCalificacion, updateCalificaion, getAlumnos, datalistaAlumnos, dataFechasCierre } from '../../servicios/api';\nimport './calificaciones.css';\nimport { id_criterios, unidadCalificacion } from './select_temas';\nexport const TablaCapturaCalificaciones = data => {\n  const estilos = useStyles();\n  const [calificaciones, setcalificaciones] = React.useState({\n    datalistaAlumnos\n  });\n  const {\n    alumnos,\n    ccx1,\n    ccx2,\n    ccx3,\n    ccx4\n  } = data;\n  useEffect(() => {\n    console.log('effect tablas');\n    setcalificaciones({\n      datalistaAlumnos: datalistaAlumnos\n    });\n  }, []);\n\n  const guardarPromedio = async datos => {\n    //inicio  enviar el promedio asignado en la tabla captura_calificacion\n    console.log('hook guardarPromedio >> ' + datos.idMateria);\n    console.log(datos);\n    let bandera = datos.materiaDocente_id;\n    let idcalificacion = datos.idcalificaciones;\n\n    if (bandera) {\n      if (datos.calR2 === null && datos.calR3 === null && datos.calR4 === null) {\n        datos.calR2 = 0;\n        datos.calR3 = 0;\n        datos.calR4 = 0;\n      } else if (datos.calR3 === null && datos.calR4 === null) {\n        datos.calR3 = 0;\n        datos.calR4 = 0;\n      } else if (datos.calR4 === null) {\n        datos.calR4 = 0;\n      }\n\n      await updateCalificaion(idcalificacion, datos);\n    } else {\n      //crear registro para el alumno en registro calificacion\n      console.log('unidadCalificacion  v');\n      console.log(unidadCalificacion);\n      await crearCalificacion(datos, unidadCalificacion, id_criterios);\n      await getAlumnos(datos.idMateria, unidadCalificacion); //LISTA DE ALUMNOS\n\n      await setcalificaciones({\n        datalistaAlumnos: datalistaAlumnos\n      });\n    }\n  }; //fin\n\n\n  return React.createElement(MaterialTable, {\n    id: \"mytable\",\n    estilos: {\n      td: estilos.td\n    },\n    title: \"Captura de calificaciones\",\n    columns: alumnos.columns //columnas\n    ,\n    data: calificaciones.datalistaAlumnos //filas\n    ,\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setcalificaciones(prevState => {\n              const datalistaAlumnos = [...prevState.datalistaAlumnos]; //obtenr data\n\n              console.log(newData.calCriterio1 = newData.calR1 * (ccx1 / 100));\n              console.log(newData.calCriterio2 = newData.calR2 * (ccx2 / 100));\n              console.log(newData.calCriterio3 = newData.calR3 * (ccx3 / 100));\n              console.log(newData.calCriterio4 = newData.calR4 * (ccx4 / 100));\n              console.log(newData.calificaciontotal = parseInt(newData.calCriterio1) + parseInt(newData.calCriterio2) + parseInt(newData.calCriterio3) + parseInt(newData.calCriterio4));\n              console.log(newData); //estado fila modificado\n\n              datalistaAlumnos[datalistaAlumnos.indexOf(oldData)] = newData;\n              guardarPromedio(newData);\n              return { ...prevState,\n                datalistaAlumnos\n              };\n            });\n          }\n        }, 600);\n      })\n    },\n    options: {\n      headerStyle: {\n        backgroundColor: '#01579b',\n        color: '#FFF',\n        size: 'small'\n      },\n      rowStyle: {\n        white: 'pre'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["E:/Certificados/itsrdocentes/itsrdocentes/src/componentes/contenedores/docente_calificaciones/Tabla_registro.js"],"names":["React","useEffect","MaterialTable","useStyles","crearCalificacion","updateCalificaion","getAlumnos","datalistaAlumnos","dataFechasCierre","id_criterios","unidadCalificacion","TablaCapturaCalificaciones","data","estilos","calificaciones","setcalificaciones","useState","alumnos","ccx1","ccx2","ccx3","ccx4","console","log","guardarPromedio","datos","idMateria","bandera","materiaDocente_id","idcalificacion","idcalificaciones","calR2","calR3","calR4","td","columns","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","prevState","calCriterio1","calR1","calCriterio2","calCriterio3","calCriterio4","calificaciontotal","parseInt","indexOf","headerStyle","backgroundColor","color","size","rowStyle","white"],"mappings":"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","sourcesContent":["import React, {useEffect}from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { useStyles } from './dialogos_calificacion';\r\nimport { crearCalificacion, updateCalificaion,getAlumnos, datalistaAlumnos,dataFechasCierre } from '../../servicios/api';\r\nimport './calificaciones.css';\r\n\r\nimport {id_criterios,unidadCalificacion} from './select_temas'\r\n\r\n\r\nexport const TablaCapturaCalificaciones = (data) => {\r\n\r\n  const estilos = useStyles();\r\n  const [calificaciones, setcalificaciones] = React.useState({ datalistaAlumnos });\r\n  const { alumnos, ccx1, ccx2, ccx3, ccx4 } = data;\r\n\r\n  useEffect(()=>{\r\n      console.log('effect tablas')\r\n    setcalificaciones({ datalistaAlumnos:datalistaAlumnos })\r\n  },[])\r\n\r\n\r\n    const guardarPromedio = async (datos) => {//inicio  enviar el promedio asignado en la tabla captura_calificacion\r\n        console.log('hook guardarPromedio >> '+ datos.idMateria )\r\n        console.log(datos )\r\n    \r\n        let bandera = datos.materiaDocente_id;\r\n        let idcalificacion = datos.idcalificaciones;\r\n    \r\n        if (bandera) {\r\n          if (datos.calR2 === null && datos.calR3 === null && datos.calR4 === null) {\r\n            datos.calR2 = 0;\r\n            datos.calR3 = 0;\r\n            datos.calR4 = 0;\r\n          } else if (datos.calR3 === null && datos.calR4 === null) {\r\n            datos.calR3 = 0;\r\n            datos.calR4 = 0;\r\n          } else if (datos.calR4 === null) {\r\n            datos.calR4 = 0;\r\n          }\r\n          await updateCalificaion(idcalificacion, datos)\r\n        } else {//crear registro para el alumno en registro calificacion\r\n          console.log('unidadCalificacion  v')\r\n          \r\n          console.log(unidadCalificacion)\r\n          await crearCalificacion(datos, unidadCalificacion, id_criterios);\r\n          await getAlumnos(datos.idMateria, unidadCalificacion);//LISTA DE ALUMNOS\r\n          await setcalificaciones({ datalistaAlumnos: datalistaAlumnos });\r\n        }\r\n      }//fin\r\n\r\n\r\n    return (\r\n        <MaterialTable \r\n       id=\"mytable\"\r\n       estilos={{td:estilos.td}}\r\n            title=\"Captura de calificaciones\"\r\n            columns={alumnos.columns}//columnas\r\n            data={calificaciones.datalistaAlumnos}//filas\r\n            editable={\r\n                {\r\n                    onRowUpdate: (newData, oldData) =>\r\n                        new Promise(resolve => {\r\n                            setTimeout(() => {\r\n                                resolve();\r\n                                if (oldData) {\r\n                                    setcalificaciones(prevState => {\r\n                                        const datalistaAlumnos = [...prevState.datalistaAlumnos];//obtenr data\r\n                                        console.log(newData.calCriterio1 = (newData.calR1 * (ccx1 / 100)))\r\n                                        console.log(newData.calCriterio2 = (newData.calR2 * (ccx2 / 100)))\r\n                                        console.log(newData.calCriterio3 = (newData.calR3 * (ccx3 / 100)))\r\n                                        console.log(newData.calCriterio4 = (newData.calR4 * (ccx4 / 100)))\r\n                                        console.log(newData.calificaciontotal = (parseInt(newData.calCriterio1) + parseInt(newData.calCriterio2) + parseInt(newData.calCriterio3) + parseInt(newData.calCriterio4)))\r\n                                        console.log(newData)//estado fila modificado\r\n                                        datalistaAlumnos[datalistaAlumnos.indexOf(oldData)] = newData;\r\n                                        guardarPromedio(newData)\r\n                                        return { ...prevState, datalistaAlumnos };\r\n                                    });\r\n                                }\r\n                            }, 600);\r\n                        }),\r\n                }\r\n            }\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: '#01579b',\r\n                    color: '#FFF',\r\n                    size: 'small'\r\n                },\r\n                rowStyle: {\r\n                    white: 'pre',\r\n                },\r\n            }} />\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}