{"ast":null,"code":"import decode from 'jwt-decode';\nimport * as toastr from 'toastr';\nexport default class AuthService {\n  constructor(domain) {\n    console.log('met constructor');\n    this.domain = domain || 'http://localhost:4000'; //https://app-api-docentes.herokuapp.com\n\n    this.requestFetch = this.requestFetch.bind(this);\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.getProfile = this.getProfile.bind(this);\n  }\n\n  login(usuario, password) {\n    console.log(usuario, password + 'gsssss---');\n    return this.requestFetch('/api/login/verificar', {\n      method: 'POST',\n      body: JSON.stringify({\n        usuario,\n        password\n      })\n    }).then(response => {\n      console.log(response);\n\n      if (response.sin === 'null') {\n        console.log('usuarios incorrectos');\n      } else {\n        this.setToken(response.token);\n        this.setUser(response.user);\n        return Promise.resolve(response);\n      }\n\n      toastr.warning('contraseña o usuario', 'Incorrectos');\n    });\n  }\n\n  isLoggedIn() {\n    console.log('met isLoggedIn');\n    return !!this.getToken();\n  }\n\n  setToken(token) {\n    localStorage.setItem('token_id', token);\n  }\n\n  getToken() {\n    return localStorage.getItem('token_id');\n  }\n\n  setUser(userJSON) {\n    localStorage.setItem('resul', JSON.stringify(userJSON));\n  }\n\n  getUser() {\n    return JSON.parse(localStorage.getItem('resul'));\n  }\n\n  getUserAccess() {\n    let user = this.getUser();\n    console.log(user);\n\n    if (user) {\n      return user[0].nombreRol;\n    } else {\n      return false;\n    }\n  }\n\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  logout() {\n    localStorage.removeItem('token_id');\n    localStorage.removeItem('resul');\n  }\n\n  requestFetch(urlRelative, opcions) {\n    //inicio\n    console.log('peticion de token');\n    const headers = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    };\n\n    if (this.isLoggedIn()) {\n      headers['token'] = this.getToken();\n    }\n\n    return fetch(this.domain + urlRelative, {\n      headers,\n      ...opcions\n    }).then(response => response.json()).catch(error => Promise.reject(error));\n  } //fin\n\n\n}","map":{"version":3,"sources":["E:/Certificados/itsrdocentes/itsrdocentes/src/componentes/servicios/AuthService.js"],"names":["decode","toastr","AuthService","constructor","domain","console","log","requestFetch","bind","login","logout","getProfile","usuario","password","method","body","JSON","stringify","then","response","sin","setToken","token","setUser","user","Promise","resolve","warning","isLoggedIn","getToken","localStorage","setItem","getItem","userJSON","getUser","parse","getUserAccess","nombreRol","removeItem","urlRelative","opcions","headers","Accept","fetch","json","catch","error","reject"],"mappings":"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","sourcesContent":["import decode from 'jwt-decode';\r\nimport * as toastr from 'toastr';\r\n\r\nexport default class AuthService {\r\n\tconstructor(domain) {\r\n\t\tconsole.log('met constructor');\r\n\r\n\t\tthis.domain = domain || 'http://localhost:4000'; //https://app-api-docentes.herokuapp.com\r\n\r\n\t\tthis.requestFetch = this.requestFetch.bind(this);\r\n\t\tthis.login = this.login.bind(this);\r\n\t\tthis.logout = this.logout.bind(this);\r\n\t\tthis.getProfile = this.getProfile.bind(this);\r\n\t}\r\n\tlogin(usuario, password) {\r\n\t\tconsole.log(usuario, password + 'gsssss---');\r\n\r\n\t\treturn this.requestFetch('/api/login/verificar', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify({ usuario, password })\r\n\t\t}).then((response) => {\r\n\t\t\tconsole.log(response);\r\n\t\t\tif (response.sin === 'null') {\r\n\t\t\t\tconsole.log('usuarios incorrectos');\r\n\t\t\t} else {\r\n\t\t\t\tthis.setToken(response.token);\r\n\t\t\t\tthis.setUser(response.user);\r\n\t\t\t\treturn Promise.resolve(response);\r\n\t\t\t}\r\n\t\t\ttoastr.warning('contraseña o usuario', 'Incorrectos');\r\n\t\t});\r\n\t}\r\n\r\n\tisLoggedIn() {\r\n\t\tconsole.log('met isLoggedIn');\r\n\t\treturn !!this.getToken();\r\n\t}\r\n\r\n\tsetToken(token) {\r\n\t\tlocalStorage.setItem('token_id', token);\r\n\t}\r\n\r\n\tgetToken() {\r\n\t\treturn localStorage.getItem('token_id');\r\n\t}\r\n\r\n\tsetUser(userJSON) {\r\n\t\tlocalStorage.setItem('resul', JSON.stringify(userJSON));\r\n\t}\r\n\r\n\tgetUser() {\r\n\t\treturn JSON.parse(localStorage.getItem('resul'));\r\n\t}\r\n\r\n\tgetUserAccess() {\r\n\t\tlet user = this.getUser();\r\n\t\tconsole.log(user);\r\n\t\tif (user) {\r\n\t\t\treturn user[0].nombreRol;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tgetProfile() {\r\n\t\treturn decode(this.getToken());\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tlocalStorage.removeItem('token_id');\r\n\t\tlocalStorage.removeItem('resul');\r\n\t}\r\n\r\n\trequestFetch(urlRelative, opcions) {\r\n\t\t//inicio\r\n\t\tconsole.log('peticion de token');\r\n\r\n\t\tconst headers = {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t};\r\n\t\tif (this.isLoggedIn()) {\r\n\t\t\theaders['token'] = this.getToken();\r\n\t\t}\r\n\t\treturn fetch(this.domain + urlRelative, {\r\n\t\t\theaders,\r\n\t\t\t...opcions\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.catch((error) => Promise.reject(error));\r\n\t} //fin\r\n}\r\n"]},"metadata":{},"sourceType":"module"}