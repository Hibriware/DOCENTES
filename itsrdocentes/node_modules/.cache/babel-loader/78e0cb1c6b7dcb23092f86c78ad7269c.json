{"ast":null,"code":"var _jsxFileName = \"E:\\\\Certificados\\\\itsrdocentes\\\\itsrdocentes\\\\src\\\\componentes\\\\contenedores\\\\docente_calificaciones\\\\Tabla_registro.js\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { useStyles } from './dialogos_calificacion';\nimport { crearCalificacion, updateCalificaion, getAlumnos, datalistaAlumnos } from '../../servicios/api';\nimport './calificaciones.css';\nimport { id_criterios, unidadCalificacion } from './select_temas';\nexport const TablaCapturaCalificaciones = React.memo(data => {\n  console.log('memo Tabla registro ');\n  const estilos = useStyles();\n  const {\n    alumnos,\n    setcalificaciones,\n    calificaciones,\n    ccx1,\n    ccx2,\n    ccx3,\n    ccx4\n  } = data;\n\n  const guardarPromedio = async datos => {\n    //inicio  enviar el promedio asignado en la tabla captura_calificacion\n    console.log('hook guardarPromedio >> ' + datos.idMateria);\n    console.log(datos);\n    let bandera = datos.materiaDocente_id;\n    let idcalificacion = datos.idcalificaciones;\n\n    if (bandera) {\n      if (datos.calR1 === null && datos.calR2 === null && datos.calR3 === null && datos.calR4 === null) {\n        datos.calR1 = 0;\n        datos.calR2 = 0;\n        datos.calR3 = 0;\n        datos.calR4 = 0;\n      } else if (datos.calR2 === null && datos.calR3 === null && datos.calR4 === null) {\n        datos.calR2 = 0;\n        datos.calR3 = 0;\n        datos.calR4 = 0;\n      } else if (datos.calR3 === null && datos.calR4 === null) {\n        datos.calR3 = 0;\n        datos.calR4 = 0;\n      } else if (datos.calR4 === null) {\n        datos.calR4 = 0;\n      }\n\n      await updateCalificaion(idcalificacion, datos);\n    } else {\n      //crear registro para el alumno en registro calificacion\n      console.log('unidadCalificacion  v');\n      console.log(unidadCalificacion);\n      await crearCalificacion(datos, unidadCalificacion, id_criterios);\n      await getAlumnos(datos.idMateria, unidadCalificacion); //LISTA DE ALUMNOS\n\n      await setcalificaciones({\n        datalistaAlumnos: datalistaAlumnos\n      });\n    }\n  }; //fin\n\n\n  return React.createElement(\"div\", {\n    style: {\n      maxWidth: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    id: \"mytable\",\n    estilos: {\n      td: estilos.td\n    },\n    title: \"Captura de calificaciones\",\n    columns: alumnos.columns //columnas\n    ,\n    data: calificaciones.datalistaAlumnos //filas\n    ,\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setcalificaciones(prevState => {\n              const datalistaAlumnos = [...prevState.datalistaAlumnos]; //obtenr data\n\n              console.log(newData.calCriterio1 = newData.calR1 * (ccx1 / 100));\n              console.log(newData.calCriterio2 = newData.calR2 * (ccx2 / 100));\n              console.log(newData.calCriterio3 = newData.calR3 * (ccx3 / 100));\n              console.log(newData.calCriterio4 = newData.calR4 * (ccx4 / 100));\n              console.log(newData.calificaciontotal = parseInt(newData.calCriterio1) + parseInt(newData.calCriterio2) + parseInt(newData.calCriterio3) + parseInt(newData.calCriterio4));\n              console.log(newData); //estado fila modificado\n\n              datalistaAlumnos[datalistaAlumnos.indexOf(oldData)] = newData;\n              guardarPromedio(newData);\n              return { ...prevState,\n                datalistaAlumnos\n              };\n            });\n          }\n        }, 600);\n      })\n    },\n    options: {\n      headerStyle: {\n        backgroundColor: '#01579b',\n        color: '#FFF',\n        size: 'small'\n      },\n      rowStyle: {\n        white: 'pre'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["E:/Certificados/itsrdocentes/itsrdocentes/src/componentes/contenedores/docente_calificaciones/Tabla_registro.js"],"names":["React","MaterialTable","useStyles","crearCalificacion","updateCalificaion","getAlumnos","datalistaAlumnos","id_criterios","unidadCalificacion","TablaCapturaCalificaciones","memo","data","console","log","estilos","alumnos","setcalificaciones","calificaciones","ccx1","ccx2","ccx3","ccx4","guardarPromedio","datos","idMateria","bandera","materiaDocente_id","idcalificacion","idcalificaciones","calR1","calR2","calR3","calR4","maxWidth","td","columns","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","prevState","calCriterio1","calCriterio2","calCriterio3","calCriterio4","calificaciontotal","parseInt","indexOf","headerStyle","backgroundColor","color","size","rowStyle","white"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,UAA/C,EAA2DC,gBAA3D,QAAmF,qBAAnF;AACA,OAAO,sBAAP;AACA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,gBAAjD;AAGA,OAAO,MAAMC,0BAA0B,GAAGT,KAAK,CAACU,IAAN,CAAYC,IAAD,IAAU;AAC7DC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAM;AAAEa,IAAAA,OAAF;AAAWC,IAAAA,iBAAX;AAA8BC,IAAAA,cAA9B;AAA8CC,IAAAA,IAA9C;AAAoDC,IAAAA,IAApD;AAA0DC,IAAAA,IAA1D;AAAgEC,IAAAA;AAAhE,MAAyEV,IAA/E;;AAEA,QAAMW,eAAe,GAAG,MAAOC,KAAP,IAAiB;AAAC;AAExCX,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BU,KAAK,CAACC,SAA/C;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AAEA,QAAIE,OAAO,GAAGF,KAAK,CAACG,iBAApB;AACA,QAAIC,cAAc,GAAGJ,KAAK,CAACK,gBAA3B;;AAEA,QAAIH,OAAJ,EAAa;AACX,UAAGF,KAAK,CAACM,KAAN,KAAgB,IAAhB,IAAwBN,KAAK,CAACO,KAAN,KAAgB,IAAxC,IAAgDP,KAAK,CAACQ,KAAN,KAAgB,IAAhE,IAAwER,KAAK,CAACS,KAAN,KAAgB,IAA3F,EAAgG;AAC9FT,QAAAA,KAAK,CAACM,KAAN,GAAc,CAAd;AACAN,QAAAA,KAAK,CAACO,KAAN,GAAc,CAAd;AACAP,QAAAA,KAAK,CAACQ,KAAN,GAAc,CAAd;AACAR,QAAAA,KAAK,CAACS,KAAN,GAAc,CAAd;AACD,OALD,MAMK,IAAIT,KAAK,CAACO,KAAN,KAAgB,IAAhB,IAAwBP,KAAK,CAACQ,KAAN,KAAgB,IAAxC,IAAgDR,KAAK,CAACS,KAAN,KAAgB,IAApE,EAA0E;AAC7ET,QAAAA,KAAK,CAACO,KAAN,GAAc,CAAd;AACAP,QAAAA,KAAK,CAACQ,KAAN,GAAc,CAAd;AACAR,QAAAA,KAAK,CAACS,KAAN,GAAc,CAAd;AACD,OAJI,MAIE,IAAIT,KAAK,CAACQ,KAAN,KAAgB,IAAhB,IAAwBR,KAAK,CAACS,KAAN,KAAgB,IAA5C,EAAkD;AACvDT,QAAAA,KAAK,CAACQ,KAAN,GAAc,CAAd;AACAR,QAAAA,KAAK,CAACS,KAAN,GAAc,CAAd;AACD,OAHM,MAGA,IAAIT,KAAK,CAACS,KAAN,KAAgB,IAApB,EAA0B;AAC/BT,QAAAA,KAAK,CAACS,KAAN,GAAc,CAAd;AACD;;AACD,YAAM5B,iBAAiB,CAACuB,cAAD,EAAiBJ,KAAjB,CAAvB;AACD,KAlBD,MAkBO;AAAC;AACNX,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEAD,MAAAA,OAAO,CAACC,GAAR,CAAYL,kBAAZ;AACA,YAAML,iBAAiB,CAACoB,KAAD,EAAQf,kBAAR,EAA4BD,YAA5B,CAAvB;AACA,YAAMF,UAAU,CAACkB,KAAK,CAACC,SAAP,EAAkBhB,kBAAlB,CAAhB,CALK,CAKiD;;AACtD,YAAMQ,iBAAiB,CAAC;AAAEV,QAAAA,gBAAgB,EAAEA;AAApB,OAAD,CAAvB;AACD;AACF,GAlCD,CAL6D,CAuC5D;;;AAGD,SACE;AAAK,IAAA,KAAK,EAAE;AAAC2B,MAAAA,QAAQ,EAAC;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,aAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,OAAO,EAAE;AAAEC,MAAAA,EAAE,EAAEpB,OAAO,CAACoB;AAAd,KAFX;AAGE,IAAA,KAAK,EAAC,2BAHR;AAIE,IAAA,OAAO,EAAEnB,OAAO,CAACoB,OAJnB,CAI2B;AAJ3B;AAKE,IAAA,IAAI,EAAElB,cAAc,CAACX,gBALvB,CAKwC;AALxC;AAME,IAAA,QAAQ,EACN;AACE8B,MAAAA,WAAW,EAAE,CAACC,OAAD,EAAUC,OAAV,KACX,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;;AACP,cAAIF,OAAJ,EAAa;AACXtB,YAAAA,iBAAiB,CAAC0B,SAAS,IAAI;AAC7B,oBAAMpC,gBAAgB,GAAG,CAAC,GAAGoC,SAAS,CAACpC,gBAAd,CAAzB,CAD6B,CAC4B;;AACzDM,cAAAA,OAAO,CAACC,GAAR,CAAYwB,OAAO,CAACM,YAAR,GAAwBN,OAAO,CAACR,KAAR,IAAiBX,IAAI,GAAG,GAAxB,CAApC;AACAN,cAAAA,OAAO,CAACC,GAAR,CAAYwB,OAAO,CAACO,YAAR,GAAwBP,OAAO,CAACP,KAAR,IAAiBX,IAAI,GAAG,GAAxB,CAApC;AACAP,cAAAA,OAAO,CAACC,GAAR,CAAYwB,OAAO,CAACQ,YAAR,GAAwBR,OAAO,CAACN,KAAR,IAAiBX,IAAI,GAAG,GAAxB,CAApC;AACAR,cAAAA,OAAO,CAACC,GAAR,CAAYwB,OAAO,CAACS,YAAR,GAAwBT,OAAO,CAACL,KAAR,IAAiBX,IAAI,GAAG,GAAxB,CAApC;AACAT,cAAAA,OAAO,CAACC,GAAR,CAAYwB,OAAO,CAACU,iBAAR,GAA6BC,QAAQ,CAACX,OAAO,CAACM,YAAT,CAAR,GAAiCK,QAAQ,CAACX,OAAO,CAACO,YAAT,CAAzC,GAAkEI,QAAQ,CAACX,OAAO,CAACQ,YAAT,CAA1E,GAAmGG,QAAQ,CAACX,OAAO,CAACS,YAAT,CAApJ;AACAlC,cAAAA,OAAO,CAACC,GAAR,CAAYwB,OAAZ,EAP6B,CAOT;;AACpB/B,cAAAA,gBAAgB,CAACA,gBAAgB,CAAC2C,OAAjB,CAAyBX,OAAzB,CAAD,CAAhB,GAAsDD,OAAtD;AACAf,cAAAA,eAAe,CAACe,OAAD,CAAf;AACA,qBAAO,EAAE,GAAGK,SAAL;AAAgBpC,gBAAAA;AAAhB,eAAP;AACD,aAXgB,CAAjB;AAYD;AACF,SAhBS,EAgBP,GAhBO,CAAV;AAiBD,OAlBD;AAFJ,KAPJ;AA8BE,IAAA,OAAO,EAAE;AACP4C,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE,SADN;AAEXC,QAAAA,KAAK,EAAE,MAFI;AAGXC,QAAAA,IAAI,EAAE;AAHK,OADN;AAMPC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE;AADC;AANH,KA9BX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AA4CD,CAtFyC,CAAnC","sourcesContent":["import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { useStyles } from './dialogos_calificacion';\r\nimport { crearCalificacion, updateCalificaion, getAlumnos, datalistaAlumnos } from '../../servicios/api';\r\nimport './calificaciones.css';\r\nimport { id_criterios, unidadCalificacion } from './select_temas'\r\n\r\n\r\nexport const TablaCapturaCalificaciones = React.memo((data) => {\r\n  console.log('memo Tabla registro ')\r\n  const estilos = useStyles();\r\n  const { alumnos, setcalificaciones, calificaciones, ccx1, ccx2, ccx3, ccx4 } = data;\r\n\r\n  const guardarPromedio = async (datos) => {//inicio  enviar el promedio asignado en la tabla captura_calificacion\r\n\r\n    console.log('hook guardarPromedio >> ' + datos.idMateria)\r\n    console.log(datos)\r\n\r\n    let bandera = datos.materiaDocente_id;\r\n    let idcalificacion = datos.idcalificaciones;\r\n\r\n    if (bandera) {\r\n      if(datos.calR1 === null && datos.calR2 === null && datos.calR3 === null && datos.calR4 === null){\r\n        datos.calR1 = 0;\r\n        datos.calR2 = 0;\r\n        datos.calR3 = 0;\r\n        datos.calR4 = 0;\r\n      }\r\n      else if (datos.calR2 === null && datos.calR3 === null && datos.calR4 === null) {\r\n        datos.calR2 = 0;\r\n        datos.calR3 = 0;\r\n        datos.calR4 = 0;\r\n      } else if (datos.calR3 === null && datos.calR4 === null) {\r\n        datos.calR3 = 0;\r\n        datos.calR4 = 0;\r\n      } else if (datos.calR4 === null) {\r\n        datos.calR4 = 0;\r\n      }\r\n      await updateCalificaion(idcalificacion, datos)\r\n    } else {//crear registro para el alumno en registro calificacion\r\n      console.log('unidadCalificacion  v')\r\n\r\n      console.log(unidadCalificacion)\r\n      await crearCalificacion(datos, unidadCalificacion, id_criterios);\r\n      await getAlumnos(datos.idMateria, unidadCalificacion);//LISTA DE ALUMNOS\r\n      await setcalificaciones({ datalistaAlumnos: datalistaAlumnos });\r\n    }\r\n  }//fin\r\n\r\n\r\n  return (\r\n    <div style={{maxWidth:'100%'}}>\r\n    <MaterialTable\r\n      id=\"mytable\"\r\n      estilos={{ td: estilos.td }}\r\n      title=\"Captura de calificaciones\"\r\n      columns={alumnos.columns}//columnas\r\n      data={calificaciones.datalistaAlumnos}//filas\r\n      editable={\r\n        {\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise(resolve => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                if (oldData) {\r\n                  setcalificaciones(prevState => {\r\n                    const datalistaAlumnos = [...prevState.datalistaAlumnos];//obtenr data\r\n                    console.log(newData.calCriterio1 = (newData.calR1 * (ccx1 / 100)))\r\n                    console.log(newData.calCriterio2 = (newData.calR2 * (ccx2 / 100)))\r\n                    console.log(newData.calCriterio3 = (newData.calR3 * (ccx3 / 100)))\r\n                    console.log(newData.calCriterio4 = (newData.calR4 * (ccx4 / 100)))\r\n                    console.log(newData.calificaciontotal = (parseInt(newData.calCriterio1) + parseInt(newData.calCriterio2) + parseInt(newData.calCriterio3) + parseInt(newData.calCriterio4)))\r\n                    console.log(newData)//estado fila modificado\r\n                    datalistaAlumnos[datalistaAlumnos.indexOf(oldData)] = newData;\r\n                    guardarPromedio(newData)\r\n                    return { ...prevState, datalistaAlumnos };\r\n                  });\r\n                }\r\n              }, 600);\r\n            }),\r\n        }\r\n      }\r\n      options={{\r\n        headerStyle: {\r\n          backgroundColor: '#01579b',\r\n          color: '#FFF',\r\n          size: 'small'\r\n        },\r\n        rowStyle: {\r\n          white: 'pre',\r\n        },\r\n      }} />\r\n      </div>\r\n  );\r\n})"]},"metadata":{},"sourceType":"module"}