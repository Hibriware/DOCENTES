{"ast":null,"code":"var _jsxFileName = \"E:\\\\Certificados\\\\itsrdocentes\\\\itsrdocentes\\\\src\\\\componentes\\\\contenedores\\\\docente_calificaciones\\\\tablaprueva.jsx\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport SaveIcon from '@material-ui/icons/Save';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport moment from 'moment';\nimport swal from 'sweetalert';\nimport './calificaciones.css';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar'; //variables\n\nimport { useStyles } from './dialogos_calificacion';\nimport { dataMateria } from '../../../home';\nimport { getTemas } from '../../servicios/api';\nimport { datalista } from '../../servicios/api';\nimport { getAlumnos } from '../../servicios/api';\nimport { datalistaAlumnos } from '../../servicios/api';\nimport { getCriterios } from '../../servicios/api';\nimport { dataCriterios } from '../../servicios/api';\nimport { putCriteriosc1 } from '../../servicios/api';\nimport { putCriteriosc2 } from '../../servicios/api';\nimport { putCriteriosc3 } from '../../servicios/api';\nimport { crearCalificacion } from '../../servicios/api';\nimport { updateCalificaion } from '../../servicios/api';\nimport { fecha1, fecha2, fecha3 } from '../../../home';\nimport { PERIODO_ACTUAL } from '../../../App';\nexport var unidad_Tema;\nlet ccx1 = 0,\n    ccx2 = 0,\n    ccx3 = 0,\n    unidadCalificacion,\n    id_criterios;\nlet periodo, materia, unidad, grupo;\nexport async function enviarCriteriosc1(porcentageC1, criterio1) {\n  //inicio guardar porcentaje 1 y criterio 1\n  // let periodo, materia, unidad, grupo\n  periodo = dataCriterios[0].periodo;\n  materia = dataCriterios[0].materias_idmaterias;\n  unidad = dataCriterios[0].numUnidad;\n  grupo = dataCriterios[0].asingnacion_grupo_id;\n  await putCriteriosc1(periodo, materia, unidad, grupo, porcentageC1, criterio1); //data  criterio1 porcentageC1\n  //parametros update periodo, materia, unidad, grupo\n} //fin\n\nexport async function enviarCriteriosc2(porcentageC1, criterio1) {\n  //inicio guardar porcentaje 2 y criterio 2\n  //  let periodo, materia, unidad, grupo\n  periodo = dataCriterios[0].periodo;\n  materia = dataCriterios[0].materias_idmaterias;\n  unidad = dataCriterios[0].numUnidad;\n  grupo = dataCriterios[0].asingnacion_grupo_id;\n  await putCriteriosc2(periodo, materia, unidad, grupo, porcentageC1, criterio1); //data  criterio1 porcentageC1\n  //parametros update periodo, materia, unidad, grupo\n} //fin\n\nexport async function enviarCriteriosc3(porcentageC1, criterio1) {\n  //inicio guardar porcentaje 3 y criterio 3\n  // let periodo, materia, unidad, grupo\n  periodo = dataCriterios[0].periodo;\n  materia = dataCriterios[0].materias_idmaterias;\n  unidad = dataCriterios[0].numUnidad;\n  grupo = dataCriterios[0].asingnacion_grupo_id;\n  await putCriteriosc3(periodo, materia, unidad, grupo, porcentageC1, criterio1); //data  criterio1 porcentageC1\n  //parametros update periodo, materia, unidad, grupo\n} //fin\n\nvar idDocenteActual, idMateriaActual, periodoActual, cierreActual; // fun buscarTtema\n\nexport const MaterialTableDemo = () => {\n  //inicio\n  const estilos = useStyles(); // const [materiaID, setMateriaid] = React.useState('');//id materia para filtrar unidades\n\n  const [listasTemas, setListas] = React.useState([]);\n  const [MATERIA_ID, setMATERIA_ID] = React.useState([]); //let get_materia_id;\n\n  const buscarTema = async materiaid => {\n    //inicio selec materia en la vista\n    setListas([]); //actualiza el la lista de materias actual\n    //obtener datos para la consulta de unidades actuales y antes delcieere actual\n\n    idDocenteActual = dataMateria[0].id_docente;\n    idMateriaActual = materiaid.target.value;\n    periodoActual = 7;\n    cierreActual = fecha1; //esta variable vendra de la db el cierre de acta\n    //fecha1.setMonth(fecha1.getMonth() - 3);\n\n    setMATERIA_ID(idMateriaActual); //actualizar al estado\n\n    let fecha_resta_acta = moment(fecha1).subtract(2, 'months');\n    let getFecha_resta = moment(fecha_resta_acta).format(\"YYYY-MM-DD\");\n    await getTemas(idDocenteActual, idMateriaActual, periodoActual, cierreActual);\n    setListas(datalista); //actualiza el la lista de materias actual\n\n    console.log(\"<<<<\");\n    console.log(datalista);\n    console.log(idMateriaActual + ' _actual id');\n  }; //fin\n\n\n  const [avatarc1, setAvatarC1] = React.useState();\n  const [criterio_avatarc1, setCriterio_avatarC1] = React.useState();\n  const [avatarc2, setAvatarC2] = React.useState();\n  const [criterio_avatarc2, setCriterio_avatarC2] = React.useState();\n  const [avatarc3, setAvatarC3] = React.useState();\n  const [criterio_avatarc3, setCriterio_avatarC3] = React.useState();\n  const [calificaciones, setcalificaciones] = React.useState({\n    datalistaAlumnos\n  });\n\n  const obtenerTema = async tem => {\n    //inico\n    let numTemas = tem.target.value; //buscar lista alumnos  idMateria, idDocente\n\n    await getAlumnos(MATERIA_ID, numTemas); //LISTA DE ALUMNOS  Pendiene mandar unidad que es el tema #\n\n    await setcalificaciones({\n      datalistaAlumnos: datalistaAlumnos\n    });\n    await getCriterios(PERIODO_ACTUAL, MATERIA_ID, numTemas); // LISTA DE CRITERIO\n    //await setCRITERIOS(dataCriterios);\n\n    ccx1 = dataCriterios[0].porcentageC1;\n    ccx2 = dataCriterios[0].porcentageC2;\n    ccx3 = dataCriterios[0].porcentageC3;\n    setAvatarC1(ccx1);\n    setCriterio_avatarC1(dataCriterios[0].criterio1);\n    setAvatarC2(ccx2);\n    setCriterio_avatarC2(dataCriterios[0].criterio2);\n    setAvatarC3(ccx3);\n    setCriterio_avatarC3(dataCriterios[0].criterio3);\n    unidadCalificacion = dataCriterios[0].numUnidad; //public unidad del criterio seleccinado\n\n    id_criterios = dataCriterios[0].idcat_Unidad; //public id_criterios del criterio seleccinado\n\n    console.log(dataCriterios);\n    document.getElementById('porcentajeC1').value = ccx1; //actualizar los campos c1, c2, c3\n\n    document.getElementById('porcentajeC2').value = ccx2;\n    document.getElementById('porcentajeC3').value = ccx3;\n  }; //fin\n\n\n  const guardarPromedio = async datos => {\n    //inicio  enviar el promedio asignado en la tabla captura_calificacion\n    let bandera = datos.materiaDocente_id;\n    let idcalificacion = datos.idcalificaciones;\n\n    if (bandera) {\n      console.log(\"Actualizar datos del alumno....\");\n\n      if (datos.calR2 === null && datos.calR3 === null) {\n        console.log(\"inicializar en cero r2 y r3\");\n        datos.calR2 = 0;\n        datos.calR3 = 0;\n      } else if (datos.calR3 === null) {\n        console.log(\"inicializar en cero r3\");\n        datos.calR3 = 0;\n      }\n\n      await updateCalificaion(idcalificacion, datos);\n    } else {\n      console.log(\"crear registro para el alumno en registro calificacion\");\n      await crearCalificacion(datos, unidadCalificacion, id_criterios); //actualizar data alumnos ##  materia_Tema  PERIODO_ACTUAL\n\n      await getAlumnos(MATERIA_ID, unidadCalificacion); //LISTA DE ALUMNOS\n\n      await setcalificaciones({\n        datalistaAlumnos: datalistaAlumnos\n      });\n    }\n\n    console.log(datos);\n  }; //fin\n\n\n  const guardarPorcentaje_c1 = async () => {\n    //inicio\n    var input = document.getElementById('porcentajeC1');\n    input.addEventListener('input', function () {\n      if (this.value.length > 2) this.value = this.value.slice(0, 2);\n    });\n\n    if (input.value <= 100) {\n      if (input.value.length === 2) {\n        //ejecutar metodo de guardar\n        swal(\"describa el nombre del creterio:\", {\n          content: \"input\"\n        }).then(comentario => {\n          const v = async () => {\n            if (comentario) {\n              //enviar porcentage y comentario\n              await enviarCriteriosc1(input.value, comentario);\n              await getAlumnos(idMateriaActual, unidadCalificacion); //LISTA DE ALUMNOS\n\n              await setcalificaciones({\n                datalistaAlumnos: datalistaAlumnos\n              });\n              console.log(input.value);\n            } else {\n              console.log(input.value + \"noupede estar vacio \" + comentario);\n            }\n          }; //swal(`You typed: ${comentario}`);\n\n        });\n      }\n    } else {\n      alert(\"no puede exeder de 100 %\");\n    }\n  }; //fin\n\n\n  const guardarPorcentaje_c2 = e => {\n    //inicio\n    var input2 = document.getElementById('porcentajeC2'); //inicio 1\n\n    input2.addEventListener('input', function () {\n      if (this.value.length > 2) this.value = this.value.slice(0, 2);\n    });\n\n    if (input2.value <= 100) {\n      if (input2.value.length === 2) {\n        //ejecutar metodo de guardar\n        swal(\"describa el nombre del creterio:\", {\n          content: \"input\"\n        }).then(comentario => {\n          if (comentario) {\n            //enviar porcentage y comentario\n            console.log(\"estos es :\" + unidadCalificacion + \"  y \" + idMateriaActual);\n            enviarCriteriosc2(input2.value, comentario);\n            getAlumnos(idMateriaActual, unidadCalificacion); //LISTA DE ALUMNOS\n\n            console.log(input2.value);\n          } else {\n            console.log(input2.value + \"noupede estar vacio \" + comentario);\n          } //swal(`You typed: ${comentario}`);\n\n        });\n        console.log(\"ejecutar metodo de guardar 1\");\n      }\n    } else {\n      alert(\"no puede exeder de 100 %\");\n    }\n  }; //fin\n\n\n  const guardarPorcentaje_c3 = e => {\n    //inicio\n    var input3 = document.getElementById('porcentajeC3'); //inicio 1\n\n    input3.addEventListener('input', function () {\n      if (this.value.length > 2) this.value = this.value.slice(0, 2);\n    });\n\n    if (input3.value <= 100) {\n      if (input3.value.length === 2) {\n        //ejecutar metodo de guardar\n        swal(\"describa el nombre del creterio:\", {\n          content: \"input\"\n        }).then(comentario => {\n          if (comentario) {\n            //enviar porcentage y comentario\n            enviarCriteriosc3(input3.value, comentario);\n            console.log(input3.value);\n          } else {\n            console.log(input3.value + \"noupede estar vacio \" + comentario);\n          } //swal(`You typed: ${comentario}`);\n\n        });\n        console.log(\"ejecutar metodo de guardar 1\");\n      }\n    } else {\n      alert(\"no puede exeder de 100 %\");\n    }\n  }; //fin\n\n  /*const manejador = (cc1, cc2, cc3) => {//creador de table\r\n    console.log(\"imprimiendo.....\" + tema1X)\r\n    console.log(\"datos new.....\" + cc1 + cc2 + cc3)\r\n  };*/\n\n\n  const [ac, setAc] = React.useState('none'); //guardar porcentaje #########\n\n  const [alumnos, setAlumnos] = React.useState({\n    // datos de la tabla calificacion\n    columns: [{\n      title: 'Nª',\n      field: 'id',\n      editable: 'never'\n    }, {\n      title: 'Control',\n      field: 'control',\n      editable: 'never'\n    }, {\n      title: 'Nombre',\n      field: 'nameAlumno',\n      editable: 'never'\n    }, {\n      title: 'Curso',\n      field: 'curso',\n      editable: 'never'\n    }, {\n      title: 'Opcion',\n      field: 'opcion',\n      editable: 'never'\n    }, {\n      title: 'C1',\n      field: 'calR1'\n    }, {\n      title: 'C2',\n      field: 'calR2'\n    }, {\n      title: 'C3',\n      field: 'calR3'\n    }, {\n      title: '#',\n      field: '#',\n      minWidth: 5,\n      editable: 'never'\n    }, {\n      title: React.createElement(\"input\", {\n        className: \"inputTemas\",\n        type: \"number\",\n        id: \"porcentajeC1\",\n        placeholder: \"C1\",\n        style: {\n          width: '4ch'\n        },\n        onChange: guardarPorcentaje_c1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }),\n      field: 'calCriterio1',\n      editable: 'never',\n      minWidth: 10\n    }, {\n      title: React.createElement(\"input\", {\n        className: \"inputTemas\",\n        id: \"porcentajeC2\",\n        placeholder: \"C2\",\n        style: {\n          width: '4ch'\n        },\n        onChange: guardarPorcentaje_c2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }),\n      field: 'calCriterio2',\n      editable: 'never',\n      minWidth: 10\n    }, {\n      title: React.createElement(\"input\", {\n        className: \"inputTemas\",\n        id: \"porcentajeC3\",\n        placeholder: \"C3\",\n        style: {\n          width: '4ch'\n        },\n        onChange: guardarPorcentaje_c3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }),\n      field: 'calCriterio3',\n      editable: 'never'\n    }, {\n      title: 'Total',\n      field: 'calificaciontotal',\n      editable: 'never'\n    }]\n  }); //\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, \"INSTITUTO TECNOLOGICO SUPERIOR DE LOS RIOS\")), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    className: estilos.paperperiodos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, \"PERIODO: \", dataMateria[0].idnomenclaturaPeriodo)), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    className: estilos.paperperiodos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, \"CIERRE DE ACTA: \", fecha1)), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  }, React.createElement(Chip, {\n    size: \"small\",\n    avatar: React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, avatarc1),\n    label: criterio_avatarc1,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    size: \"small\",\n    avatar: React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, avatarc2),\n    label: criterio_avatarc2,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    size: \"small\",\n    avatar: React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, avatarc3),\n    label: criterio_avatarc3,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    className: estilos.papermaterias,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: estilos.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"InputLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, \"Materia\"), React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined\",\n    id: \"materia\",\n    onChange: buscarTema,\n    label: \"Materia\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }, dataMateria.map(materias => React.createElement(MenuItem, {\n    key: materias.nm,\n    value: materias.idMateria,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, materias.nombre + ' (' + materias.semestre + \"/\" + materias.nomenclatura + \") \" + materias.nombreCorto)))))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    className: estilos.papermaterias,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: estilos.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-labe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, \"Unidad\"), React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-labe\",\n    id: \"unidad\",\n    label: \"Unidad\",\n    onChange: obtenerTema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373\n    },\n    __self: this\n  }, listasTemas.map((tem, i) => React.createElement(MenuItem, {\n    key: i,\n    value: tem.numUnidad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }, tem.tema)))))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    title: \"Captura de calificaciones\",\n    columns: alumnos.columns //columnas\n    ,\n    data: calificaciones.datalistaAlumnos //filas\n\n    /*   actions={[\r\n         {\r\n           icon: 'save',\r\n           tooltip: 'Save User',\r\n           onClick: (event, rowData) => alert(\"You saved \" + rowData.control + \" c1=\" + rowData.calR1)\r\n         }\r\n       ]}*/\n    ,\n    editable: {\n      // filsa: rowData => rowData.id === '1',\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            //actualizacion del estado\n            setcalificaciones(prevState => {\n              const datalistaAlumnos = [...prevState.datalistaAlumnos]; //obtenr data\n              //console.log(newData.nombre = 'sam')//estado fila modificado\n\n              console.log(newData.calCriterio1 = newData.calR1 * (ccx1 / 100));\n              console.log(newData.calCriterio2 = newData.calR2 * (ccx2 / 100));\n              console.log(newData.calCriterio3 = newData.calR3 * (ccx3 / 100));\n              console.log(newData.calificaciontotal = parseInt(newData.calCriterio1) + parseInt(newData.calCriterio2) + parseInt(newData.calCriterio3));\n              console.log(newData); //estado fila modificado\n\n              datalistaAlumnos[datalistaAlumnos.indexOf(oldData)] = newData; // manejador(newData.c1, newData.c2, newData.c3)\n\n              guardarPromedio(newData);\n              return { ...prevState,\n                datalistaAlumnos\n              };\n            });\n          }\n        }, 600);\n      })\n    },\n    options: {\n      headerStyle: {\n        backgroundColor: '#01579b',\n        color: '#FFF'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450\n    },\n    __self: this\n  }, \"*O: Ordinario   *1:Primera oportunidad   *NA: No Alcanza\"), React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }, \"*R: Repeticion   *2:Segunda oportunidad\"), React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452\n    },\n    __self: this\n  }, \"*E: Especial\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    startIcon: React.createElement(SaveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455\n    },\n    __self: this\n  }, \"Descargar Reporte de Calificaciones\"))));\n};\nexport default MaterialTableDemo;","map":{"version":3,"sources":["E:/Certificados/itsrdocentes/itsrdocentes/src/componentes/contenedores/docente_calificaciones/tablaprueva.jsx"],"names":["React","MaterialTable","Button","Grid","Paper","SaveIcon","InputLabel","FormControl","Select","MenuItem","LinearProgress","moment","swal","Chip","Avatar","useStyles","dataMateria","getTemas","datalista","getAlumnos","datalistaAlumnos","getCriterios","dataCriterios","putCriteriosc1","putCriteriosc2","putCriteriosc3","crearCalificacion","updateCalificaion","fecha1","fecha2","fecha3","PERIODO_ACTUAL","unidad_Tema","ccx1","ccx2","ccx3","unidadCalificacion","id_criterios","periodo","materia","unidad","grupo","enviarCriteriosc1","porcentageC1","criterio1","materias_idmaterias","numUnidad","asingnacion_grupo_id","enviarCriteriosc2","enviarCriteriosc3","idDocenteActual","idMateriaActual","periodoActual","cierreActual","MaterialTableDemo","estilos","listasTemas","setListas","useState","MATERIA_ID","setMATERIA_ID","buscarTema","materiaid","id_docente","target","value","fecha_resta_acta","subtract","getFecha_resta","format","console","log","avatarc1","setAvatarC1","criterio_avatarc1","setCriterio_avatarC1","avatarc2","setAvatarC2","criterio_avatarc2","setCriterio_avatarC2","avatarc3","setAvatarC3","criterio_avatarc3","setCriterio_avatarC3","calificaciones","setcalificaciones","obtenerTema","tem","numTemas","porcentageC2","porcentageC3","criterio2","criterio3","idcat_Unidad","document","getElementById","guardarPromedio","datos","bandera","materiaDocente_id","idcalificacion","idcalificaciones","calR2","calR3","guardarPorcentaje_c1","input","addEventListener","length","slice","content","then","comentario","v","alert","guardarPorcentaje_c2","e","input2","guardarPorcentaje_c3","input3","ac","setAc","alumnos","setAlumnos","columns","title","field","editable","minWidth","width","paperperiodos","idnomenclaturaPeriodo","papermaterias","formControl","map","materias","nm","idMateria","nombre","semestre","nomenclatura","nombreCorto","i","tema","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","prevState","calCriterio1","calR1","calCriterio2","calCriterio3","calificaciontotal","parseInt","indexOf","headerStyle","backgroundColor","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport moment from 'moment';\r\nimport swal from 'sweetalert';\r\nimport './calificaciones.css';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n//variables\r\nimport { useStyles } from './dialogos_calificacion';\r\nimport { dataMateria } from '../../../home';\r\nimport { getTemas } from '../../servicios/api';\r\nimport { datalista } from '../../servicios/api';\r\nimport { getAlumnos } from '../../servicios/api';\r\nimport { datalistaAlumnos } from '../../servicios/api';\r\nimport { getCriterios } from '../../servicios/api';\r\nimport { dataCriterios } from '../../servicios/api';\r\nimport { putCriteriosc1 } from '../../servicios/api';\r\nimport { putCriteriosc2 } from '../../servicios/api';\r\nimport { putCriteriosc3 } from '../../servicios/api';\r\nimport { crearCalificacion } from '../../servicios/api';\r\nimport { updateCalificaion } from '../../servicios/api';\r\nimport { fecha1, fecha2, fecha3 } from '../../../home';\r\nimport { PERIODO_ACTUAL } from '../../../App';\r\n\r\n\r\nexport var unidad_Tema;\r\nlet ccx1 = 0, ccx2 = 0, ccx3 = 0, unidadCalificacion, id_criterios;\r\nlet periodo, materia, unidad, grupo;\r\n\r\nexport async function enviarCriteriosc1(porcentageC1, criterio1) {//inicio guardar porcentaje 1 y criterio 1\r\n  // let periodo, materia, unidad, grupo\r\n  periodo = dataCriterios[0].periodo;\r\n  materia = dataCriterios[0].materias_idmaterias;\r\n  unidad = dataCriterios[0].numUnidad;\r\n  grupo = dataCriterios[0].asingnacion_grupo_id;\r\n\r\n  await putCriteriosc1(periodo, materia, unidad, grupo, porcentageC1, criterio1)\r\n  //data  criterio1 porcentageC1\r\n  //parametros update periodo, materia, unidad, grupo\r\n}//fin\r\n\r\n\r\nexport async function enviarCriteriosc2(porcentageC1, criterio1) {//inicio guardar porcentaje 2 y criterio 2\r\n  //  let periodo, materia, unidad, grupo\r\n  periodo = dataCriterios[0].periodo;\r\n  materia = dataCriterios[0].materias_idmaterias;\r\n  unidad = dataCriterios[0].numUnidad;\r\n  grupo = dataCriterios[0].asingnacion_grupo_id;\r\n\r\n  await putCriteriosc2(periodo, materia, unidad, grupo, porcentageC1, criterio1)\r\n  //data  criterio1 porcentageC1\r\n  //parametros update periodo, materia, unidad, grupo\r\n}//fin\r\n\r\n\r\nexport async function enviarCriteriosc3(porcentageC1, criterio1) {//inicio guardar porcentaje 3 y criterio 3\r\n  // let periodo, materia, unidad, grupo\r\n  periodo = dataCriterios[0].periodo;\r\n  materia = dataCriterios[0].materias_idmaterias;\r\n  unidad = dataCriterios[0].numUnidad;\r\n  grupo = dataCriterios[0].asingnacion_grupo_id;\r\n\r\n  await putCriteriosc3(periodo, materia, unidad, grupo, porcentageC1, criterio1)\r\n  //data  criterio1 porcentageC1\r\n  //parametros update periodo, materia, unidad, grupo\r\n}//fin\r\n\r\nvar idDocenteActual, idMateriaActual, periodoActual, cierreActual; // fun buscarTtema\r\n\r\nexport const MaterialTableDemo = () => {//inicio\r\n\r\n  const estilos = useStyles();\r\n  // const [materiaID, setMateriaid] = React.useState('');//id materia para filtrar unidades\r\n  const [listasTemas, setListas] = React.useState([]);\r\n  const [MATERIA_ID, setMATERIA_ID] = React.useState([]);\r\n  //let get_materia_id;\r\n\r\n\r\n\r\n  const buscarTema = async materiaid => {//inicio selec materia en la vista\r\n    setListas([])//actualiza el la lista de materias actual\r\n    //obtener datos para la consulta de unidades actuales y antes delcieere actual\r\n    idDocenteActual = dataMateria[0].id_docente;\r\n    idMateriaActual = materiaid.target.value;\r\n    periodoActual = 7;\r\n    cierreActual = fecha1; //esta variable vendra de la db el cierre de acta\r\n    //fecha1.setMonth(fecha1.getMonth() - 3);\r\n    setMATERIA_ID(idMateriaActual);//actualizar al estado\r\n    let fecha_resta_acta = moment(fecha1).subtract(2, 'months');\r\n    let getFecha_resta = moment(fecha_resta_acta).format(\"YYYY-MM-DD\");\r\n\r\n    await getTemas(idDocenteActual, idMateriaActual, periodoActual, cierreActual);\r\n    setListas(datalista)//actualiza el la lista de materias actual\r\n\r\n    console.log(\"<<<<\")\r\n    console.log(datalista)\r\n    console.log(idMateriaActual + ' _actual id')\r\n\r\n  };//fin\r\n\r\n  const [avatarc1, setAvatarC1] = React.useState();\r\n  const [criterio_avatarc1, setCriterio_avatarC1] = React.useState();\r\n  const [avatarc2, setAvatarC2] = React.useState();\r\n  const [criterio_avatarc2, setCriterio_avatarC2] = React.useState();\r\n  const [avatarc3, setAvatarC3] = React.useState();\r\n  const [criterio_avatarc3, setCriterio_avatarC3] = React.useState();\r\n\r\n\r\n\r\n  const [calificaciones, setcalificaciones] = React.useState({ datalistaAlumnos });\r\n\r\n  const obtenerTema = async (tem) => {//inico\r\n    let numTemas = tem.target.value;\r\n    //buscar lista alumnos  idMateria, idDocente\r\n    await getAlumnos(MATERIA_ID, numTemas);//LISTA DE ALUMNOS  Pendiene mandar unidad que es el tema #\r\n    await setcalificaciones({ datalistaAlumnos: datalistaAlumnos });\r\n    await getCriterios(PERIODO_ACTUAL, MATERIA_ID, numTemas);// LISTA DE CRITERIO\r\n    //await setCRITERIOS(dataCriterios);\r\n\r\n    ccx1 = dataCriterios[0].porcentageC1;\r\n    ccx2 = dataCriterios[0].porcentageC2;\r\n    ccx3 = dataCriterios[0].porcentageC3;\r\n    setAvatarC1(ccx1)\r\n    setCriterio_avatarC1(dataCriterios[0].criterio1)\r\n    setAvatarC2(ccx2)\r\n    setCriterio_avatarC2(dataCriterios[0].criterio2)\r\n    setAvatarC3(ccx3)\r\n    setCriterio_avatarC3(dataCriterios[0].criterio3)\r\n\r\n    unidadCalificacion = dataCriterios[0].numUnidad;//public unidad del criterio seleccinado\r\n    id_criterios = dataCriterios[0].idcat_Unidad;//public id_criterios del criterio seleccinado\r\n\r\n    console.log(dataCriterios)\r\n    document.getElementById('porcentajeC1').value = ccx1; //actualizar los campos c1, c2, c3\r\n    document.getElementById('porcentajeC2').value = ccx2;\r\n    document.getElementById('porcentajeC3').value = ccx3;\r\n\r\n\r\n  }//fin\r\n\r\n\r\n  const guardarPromedio = async (datos) => {//inicio  enviar el promedio asignado en la tabla captura_calificacion\r\n    \r\n    let bandera = datos.materiaDocente_id;\r\n    let idcalificacion = datos.idcalificaciones;\r\n\r\n    if (bandera) {\r\n      console.log(\"Actualizar datos del alumno....\");\r\n\r\n      if (datos.calR2 === null && datos.calR3 === null) {\r\n          console.log(\"inicializar en cero r2 y r3\");\r\n          datos.calR2 = 0;\r\n          datos.calR3 = 0;\r\n      } else if (datos.calR3 === null) {\r\n                   console.log(\"inicializar en cero r3\");\r\n                  datos.calR3 = 0;\r\n      }\r\n\r\n      await updateCalificaion(idcalificacion, datos)\r\n\r\n    } else {\r\n\r\n        console.log(\"crear registro para el alumno en registro calificacion\")\r\n          await crearCalificacion(datos, unidadCalificacion, id_criterios);\r\n      //actualizar data alumnos ##  materia_Tema  PERIODO_ACTUAL\r\n          await getAlumnos(MATERIA_ID, unidadCalificacion);//LISTA DE ALUMNOS\r\n          await setcalificaciones({ datalistaAlumnos: datalistaAlumnos });\r\n    }\r\n    console.log(datos)\r\n\r\n  }//fin\r\n\r\n\r\n\r\n  \r\nconst guardarPorcentaje_c1 = async () => {//inicio\r\n  var input = document.getElementById('porcentajeC1');\r\n  input.addEventListener('input', function () {\r\n    if (this.value.length > 2)\r\n      this.value = this.value.slice(0, 2);\r\n  })\r\n  if (input.value <= 100) {\r\n    if (input.value.length === 2) {\r\n\r\n      //ejecutar metodo de guardar\r\n      swal(\"describa el nombre del creterio:\", {\r\n        content: \"input\",\r\n      })\r\n        .then((comentario) => { const v = async ()  => {\r\n          if (comentario) {\r\n            //enviar porcentage y comentario\r\n           await enviarCriteriosc1(input.value, comentario);\r\n           await getAlumnos(idMateriaActual,unidadCalificacion);//LISTA DE ALUMNOS\r\n           await setcalificaciones({ datalistaAlumnos: datalistaAlumnos });\r\n            console.log(input.value)\r\n          } else {\r\n            console.log(input.value + \"noupede estar vacio \" + comentario)\r\n          }\r\n        }\r\n          \r\n          //swal(`You typed: ${comentario}`);\r\n        });\r\n    }\r\n  } else {\r\n    alert(\"no puede exeder de 100 %\")\r\n  }\r\n}//fin\r\n\r\n\r\nconst guardarPorcentaje_c2 = (e) => {//inicio\r\n\r\n  var input2 = document.getElementById('porcentajeC2');//inicio 1\r\n  input2.addEventListener('input', function () {\r\n    if (this.value.length > 2)\r\n      this.value = this.value.slice(0, 2);\r\n  })\r\n\r\n  if (input2.value <= 100) {\r\n    if (input2.value.length === 2) {\r\n\r\n      //ejecutar metodo de guardar\r\n      swal(\"describa el nombre del creterio:\", {\r\n        content: \"input\",\r\n      })\r\n        .then((comentario) => {\r\n\r\n          if (comentario) {\r\n            //enviar porcentage y comentario\r\n            console.log(\"estos es :\" + unidadCalificacion+ \"  y \" + idMateriaActual)\r\n            enviarCriteriosc2(input2.value, comentario)\r\n            getAlumnos(idMateriaActual,unidadCalificacion);//LISTA DE ALUMNOS\r\n\r\n            console.log(input2.value)\r\n          } else {\r\n            console.log(input2.value + \"noupede estar vacio \" + comentario)\r\n          }\r\n          //swal(`You typed: ${comentario}`);\r\n        });\r\n\r\n      console.log(\"ejecutar metodo de guardar 1\")\r\n\r\n    }\r\n\r\n  } else {\r\n    alert(\"no puede exeder de 100 %\")\r\n  }\r\n\r\n}//fin\r\n\r\n\r\n\r\nconst guardarPorcentaje_c3 = (e) => {//inicio\r\n\r\n  var input3 = document.getElementById('porcentajeC3');//inicio 1\r\n  input3.addEventListener('input', function () {\r\n    if (this.value.length > 2)\r\n      this.value = this.value.slice(0, 2);\r\n  })\r\n\r\n  if (input3.value <= 100) {\r\n    if (input3.value.length === 2) {\r\n      //ejecutar metodo de guardar\r\n      swal(\"describa el nombre del creterio:\", {\r\n        content: \"input\",\r\n      })\r\n        .then((comentario) => {\r\n\r\n          if (comentario) {\r\n            //enviar porcentage y comentario\r\n            enviarCriteriosc3(input3.value, comentario)\r\n            console.log(input3.value)\r\n          } else {\r\n            console.log(input3.value + \"noupede estar vacio \" + comentario)\r\n          }\r\n          //swal(`You typed: ${comentario}`);\r\n        });\r\n\r\n      console.log(\"ejecutar metodo de guardar 1\")\r\n    }\r\n  } else {\r\n    alert(\"no puede exeder de 100 %\")\r\n  }\r\n\r\n}//fin\r\n\r\n\r\n\r\n\r\n\r\n\r\n  /*const manejador = (cc1, cc2, cc3) => {//creador de table\r\n    console.log(\"imprimiendo.....\" + tema1X)\r\n    console.log(\"datos new.....\" + cc1 + cc2 + cc3)\r\n  };*/\r\n\r\n  const [ac, setAc] = React.useState('none');//guardar porcentaje #########\r\n\r\n  const [alumnos, setAlumnos] = React.useState({// datos de la tabla calificacion\r\n\r\n    columns: [\r\n      { title: 'Nª', field: 'id', editable: 'never' },\r\n      { title: 'Control', field: 'control', editable: 'never' },\r\n      { title: 'Nombre', field: 'nameAlumno', editable: 'never' },\r\n      { title: 'Curso', field: 'curso', editable: 'never' },\r\n      { title: 'Opcion', field: 'opcion', editable: 'never' },\r\n      { title: 'C1', field: 'calR1', },\r\n      { title: 'C2', field: 'calR2', },\r\n      { title: 'C3', field: 'calR3', },\r\n      { title: '#', field: '#', minWidth: 5, editable: 'never' },\r\n      { title: <input className=\"inputTemas\" type=\"number\" id=\"porcentajeC1\" placeholder=\"C1\" style={{ width: '4ch' }} onChange={guardarPorcentaje_c1} ></input>, field: 'calCriterio1', editable: 'never', minWidth: 10 },\r\n      { title: <input className=\"inputTemas\" id=\"porcentajeC2\" placeholder=\"C2\" style={{ width: '4ch' }} onChange={guardarPorcentaje_c2} ></input>, field: 'calCriterio2', editable: 'never', minWidth: 10 },\r\n      { title: <input className=\"inputTemas\" id=\"porcentajeC3\" placeholder=\"C3\" style={{ width: '4ch' }} onChange={guardarPorcentaje_c3}  ></input>, field: 'calCriterio3', editable: 'never' },\r\n      { title: 'Total', field: 'calificaciontotal', editable: 'never' },\r\n    ]\r\n  })\r\n\r\n  //\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <h3 >INSTITUTO TECNOLOGICO SUPERIOR DE LOS RIOS</h3>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper elevation={0} className={estilos.paperperiodos}>PERIODO: {dataMateria[0].idnomenclaturaPeriodo}</Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper elevation={0} className={estilos.paperperiodos}>CIERRE DE ACTA: {fecha1}</Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper elevation={0} >\r\n            <Chip size=\"small\" avatar={<Avatar>{avatarc1}</Avatar>} label={criterio_avatarc1} color=\"secondary\"/>\r\n            <Chip size=\"small\" avatar={<Avatar>{avatarc2}</Avatar>} label={criterio_avatarc2} color=\"secondary\"/>\r\n            <Chip size=\"small\" avatar={<Avatar>{avatarc3}</Avatar>} label={criterio_avatarc3} color=\"secondary\"/>\r\n          \r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper elevation={0} className={estilos.papermaterias}>\r\n            <FormControl variant=\"outlined\" className={estilos.formControl}>\r\n              <InputLabel id=\"InputLabel\">Materia</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined\"\r\n                id=\"materia\"\r\n                onChange={buscarTema}\r\n                label=\"Materia\"\r\n              >\r\n                {\r\n                  dataMateria.map((materias) => (<MenuItem key={materias.nm} value={materias.idMateria} >{materias.nombre + ' (' + materias.semestre + \"/\" + materias.nomenclatura + \") \" + materias.nombreCorto}</MenuItem>))\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper elevation={0} className={estilos.papermaterias}>\r\n            <FormControl variant=\"outlined\" className={estilos.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-labe\">Unidad</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-labe\"\r\n                id=\"unidad\"\r\n                label=\"Unidad\"\r\n                onChange={obtenerTema}\r\n              >\r\n                {\r\n                  listasTemas.map((tem, i) => (<MenuItem key={i} value={tem.numUnidad}>{tem.tema}</MenuItem>))\r\n\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={12} sm={12}>\r\n\r\n          {/*   <Paper > <Paper className={classes.root}>\r\n    <TableContainer className={classes.container}>*/}\r\n          <Paper elevation={3} >\r\n\r\n            <MaterialTable\r\n              title=\"Captura de calificaciones\"\r\n              columns={alumnos.columns}//columnas\r\n              data={calificaciones.datalistaAlumnos}//filas\r\n\r\n              /*   actions={[\r\n                   {\r\n                     icon: 'save',\r\n                     tooltip: 'Save User',\r\n                     onClick: (event, rowData) => alert(\"You saved \" + rowData.control + \" c1=\" + rowData.calR1)\r\n                   }\r\n                 ]}*/\r\n\r\n              editable={\r\n                {\r\n                  // filsa: rowData => rowData.id === '1',\r\n                  onRowUpdate: (newData, oldData) =>\r\n                    new Promise(resolve => {\r\n                      setTimeout(() => {\r\n                        resolve();\r\n                        if (oldData) {\r\n                          //actualizacion del estado\r\n                          setcalificaciones(prevState => {\r\n                            const datalistaAlumnos = [...prevState.datalistaAlumnos];//obtenr data\r\n                            //console.log(newData.nombre = 'sam')//estado fila modificado\r\n                            console.log(newData.calCriterio1 = (newData.calR1 * (ccx1 / 100)))\r\n                            console.log(newData.calCriterio2 = (newData.calR2 * (ccx2 / 100)))\r\n                            console.log(newData.calCriterio3 = (newData.calR3 * (ccx3 / 100)))\r\n                            console.log(newData.calificaciontotal = (parseInt(newData.calCriterio1) + parseInt(newData.calCriterio2) + parseInt(newData.calCriterio3)))\r\n                            console.log(newData)//estado fila modificado\r\n                            datalistaAlumnos[datalistaAlumnos.indexOf(oldData)] = newData;\r\n                            // manejador(newData.c1, newData.c2, newData.c3)\r\n                            guardarPromedio(newData)\r\n                            return { ...prevState, datalistaAlumnos };\r\n                          });\r\n                        }\r\n                      }, 600);\r\n                    }),\r\n                }\r\n              }\r\n              options={{\r\n                headerStyle: {\r\n                  backgroundColor: '#01579b',\r\n                  color: '#FFF'\r\n                }\r\n              }}\r\n            />\r\n\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper >*O: Ordinario   *1:Primera oportunidad   *NA: No Alcanza</Paper>\r\n          <Paper >*R: Repeticion   *2:Segunda oportunidad</Paper>\r\n          <Paper >*E: Especial</Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            Descargar Reporte de Calificaciones\r\n          </Button>\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default MaterialTableDemo;"]},"metadata":{},"sourceType":"module"}