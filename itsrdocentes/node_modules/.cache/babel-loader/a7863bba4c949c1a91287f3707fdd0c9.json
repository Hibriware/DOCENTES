{"ast":null,"code":"import decode from 'jwt-decode';\nimport * as toastr from 'toastr';\nexport default class AuthService {\n  constructor(domain) {\n    console.log('met constructor');\n    this.domain = domain || 'http://212.237.52.166:4000'; //https://app-api-docentes.herokuapp.com\n\n    this.requestFetch = this.requestFetch.bind(this);\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.getProfile = this.getProfile.bind(this);\n  }\n\n  login(usuario, password) {\n    try {\n      return this.requestFetch('/api/login/verificar', {\n        method: 'POST',\n        body: JSON.stringify({\n          usuario,\n          password\n        })\n      }).then(response => {\n        console.log(response);\n\n        if (response.message === 'ocurrio un error' || response.message === 'contrase単a incorrecta') {\n          console.log('usuarios incorrectos');\n        } else {\n          this.setToken(response.token);\n          this.setUser(response.user);\n          return Promise.resolve(response);\n        }\n\n        toastr.warning('contrase単a o usuario', 'Incorrectos');\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  isLoggedIn() {\n    try {\n      console.log('met isLoggedIn');\n      return !!this.getToken();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  setToken(token) {\n    try {\n      sessionStorage.setItem('token_id', token);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getToken() {\n    try {\n      //localStorage\n      return sessionStorage.getItem('token_id');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  setUser(userJSON) {\n    try {\n      sessionStorage.setItem('resul', JSON.stringify(userJSON));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getUser() {\n    try {\n      return JSON.parse(sessionStorage.getItem('resul'));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getUserAccess() {\n    try {\n      let user = this.getUser();\n      console.log(user);\n\n      if (user) {\n        return user[0].nombreRol;\n      } else {\n        return false;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getProfile() {\n    try {\n      return decode(this.getToken());\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  logout() {\n    try {\n      sessionStorage.removeItem('token_id');\n      sessionStorage.removeItem('resul');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  requestFetch(urlRelative, opcions) {\n    //inicio\n    try {\n      console.log('peticion de token');\n      const headers = {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      };\n\n      if (this.isLoggedIn()) {\n        headers['token'] = this.getToken();\n      }\n\n      return fetch(this.domain + urlRelative, {\n        headers,\n        ...opcions\n      }).then(response => response.json()).catch(error => Promise.reject(error));\n    } catch (error) {\n      console.log(error);\n    }\n  } //fin\n\n\n}","map":{"version":3,"sources":["E:/Certificados/heroku/pruevaparaproduccion/DOCENTES/itsrdocentes/src/componentes/servicios/AuthService.js"],"names":["decode","toastr","AuthService","constructor","domain","console","log","requestFetch","bind","login","logout","getProfile","usuario","password","method","body","JSON","stringify","then","response","message","setToken","token","setUser","user","Promise","resolve","warning","error","isLoggedIn","getToken","sessionStorage","setItem","getItem","userJSON","getUser","parse","getUserAccess","nombreRol","removeItem","urlRelative","opcions","headers","Accept","fetch","json","catch","reject"],"mappings":"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","sourcesContent":["import decode from 'jwt-decode';\r\nimport * as toastr from 'toastr';\r\n\r\nexport default class AuthService {\r\n\tconstructor(domain) {\r\n\t\tconsole.log('met constructor');\r\n\r\n\t\tthis.domain = domain || 'http://212.237.52.166:4000'; //https://app-api-docentes.herokuapp.com\r\n\r\n\t\tthis.requestFetch = this.requestFetch.bind(this);\r\n\t\tthis.login = this.login.bind(this);\r\n\t\tthis.logout = this.logout.bind(this);\r\n\t\tthis.getProfile = this.getProfile.bind(this);\r\n\t}\r\n\tlogin(usuario, password) {\r\n\t\ttry {\r\n\t\t\treturn this.requestFetch('/api/login/verificar', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({ usuario, password })\r\n\t\t\t}).then((response) => {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tif (response.message === 'ocurrio un error' || response.message === 'contrase単a incorrecta') {\r\n\t\t\t\t\tconsole.log('usuarios incorrectos');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setToken(response.token);\r\n\t\t\t\t\tthis.setUser(response.user);\r\n\t\t\t\t\treturn Promise.resolve(response);\r\n\t\t\t\t}\r\n\t\t\t\ttoastr.warning('contrase単a o usuario', 'Incorrectos');\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tisLoggedIn() {\r\n\t\ttry {\r\n\t\t\tconsole.log('met isLoggedIn');\r\n\t\t\treturn !!this.getToken();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tsetToken(token) {\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tsessionStorage.setItem('token_id', token);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tgetToken() {\r\n\t\ttry {\r\n\t\t\t//localStorage\r\n\t\t\treturn sessionStorage.getItem('token_id');\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tsetUser(userJSON) {\r\n\t\ttry {\r\n\t\t\tsessionStorage.setItem('resul', JSON.stringify(userJSON));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tgetUser() {\r\n\t\ttry {\r\n\t\t\treturn JSON.parse(sessionStorage.getItem('resul'));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tgetUserAccess() {\r\n\t\ttry {\r\n\t\t\tlet user = this.getUser();\r\n\t\t\tconsole.log(user);\r\n\t\t\tif (user) {\r\n\t\t\t\treturn user[0].nombreRol;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tgetProfile() {\r\n\t\ttry {\r\n\t\t\treturn decode(this.getToken());\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tlogout() {\r\n\t\ttry {\r\n\t\t\tsessionStorage.removeItem('token_id');\r\n\t\t\tsessionStorage.removeItem('resul');\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\trequestFetch(urlRelative, opcions) {\r\n\t\t//inicio\r\n\t\ttry {\r\n\t\t\tconsole.log('peticion de token');\r\n\r\n\t\t\tconst headers = {\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t};\r\n\t\t\tif (this.isLoggedIn()) {\r\n\t\t\t\theaders['token'] = this.getToken();\r\n\t\t\t}\r\n\t\t\treturn fetch(this.domain + urlRelative, {\r\n\t\t\t\theaders,\r\n\t\t\t\t...opcions\r\n\t\t\t})\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.catch((error) => Promise.reject(error));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t} //fin\r\n}\r\n"]},"metadata":{},"sourceType":"module"}