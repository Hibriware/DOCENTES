{"ast":null,"code":"var _jsxFileName = \"E:\\\\Certificados\\\\itsrdocentes\\\\itsrdocentes\\\\src\\\\componentes\\\\contenedores\\\\docente_calificaciones\\\\reportes\\\\parciales\\\\parciales.js\";\nimport React from 'react';\nimport { Buttons } from '../button/button';\nimport moment from 'moment';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport Itsr from '../../../../img/Logo-Tec.png';\nimport { dataMateria } from '../../../../../home';\nimport { getReporteHorarios, getReporteParcial, dataReportHorario, dataPeriodo, dataReporteParciales } from '../../../../servicios/api';\nvar newListaParciales = [];\nexport const ReportParciales = data => {\n  console.log(data);\n\n  const infPdf = async () => {\n    console.log(\"imprimiendo.... .\");\n\n    try {\n      const DOCENTE_ACTUAL = dataMateria[0].nameDocente;\n\n      for (let index = 0; index < dataMateria.length; index++) {\n        const ID_MATERIA = dataMateria[index].idMateria;\n        const PERIODO = dataMateria[index].idnomenclaturaPeriodo;\n        const GRUPO = dataMateria[index].idGrupos;\n        const Materia = dataMateria[index].nombre; //periodo materia personal grupo\n\n        await Promise.all([getReporteHorarios(PERIODO, ID_MATERIA, GRUPO), getReporteParcial(ID_MATERIA, GRUPO)]);\n        console.log(dataReporteParciales);\n        await lista();\n        await pdf(Materia, DOCENTE_ACTUAL);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  /*\r\n  nombreAspirante: \"FRANCISCO JAVIER\"\r\n  numeroControl: \"20E20001\"\r\n  tema1: \"88\"\r\n  tema2: \"91\"\r\n  tema3: \"90\"\r\n  tema4: \"\"\r\n  tema5: \"\"\r\n  tema6: \"\"\r\n  tema7: \"\"\r\n  tema8: \"\"\r\n  tema9: \"\"\r\n  tema10: \"\"*/\n\n\n  const lista = () => {\n    for (let index2 = 0; index2 < dataReporteParciales.length; index2++) {\n      let tema1 = parseInt(dataReporteParciales[index2].tema1 || 0),\n          tema2 = parseInt(dataReporteParciales[index2].tema2 || 0),\n          tema3 = parseInt(dataReporteParciales[index2].tema3 || 0),\n          tema4 = parseInt(dataReporteParciales[index2].tema4 || 0),\n          tema5 = parseInt(dataReporteParciales[index2].tema5 || 0),\n          tema6 = parseInt(dataReporteParciales[index2].tema6 || 0),\n          tema7 = parseInt(dataReporteParciales[index2].tema7 || 0),\n          tema8 = parseInt(dataReporteParciales[index2].tema8 || 0),\n          tema9 = parseInt(dataReporteParciales[index2].tema9 || 0),\n          tema10 = parseInt(dataReporteParciales[index2].tema10 || 0);\n      let values = [90, 85, 88, 0, 0,, 0, 0];\n      let count = values.length;\n      values = values.reduce((previous, current) => current += previous);\n      values /= count;\n      console.log(values);\n      var TOTAL = (tema1 + tema2 + tema3 + tema4 + tema5 + tema6 + tema7 + tema8) / 10;\n      newListaParciales[index2] = {\n        nombreAspirante: dataReporteParciales[index2].nombreAspirante,\n        numeroControl: dataReporteParciales[index2].numeroControl,\n        tema1: tema1,\n        tema2: tema2,\n        tema3: tema3,\n        tema4: tema4,\n        tema5: tema5,\n        tema6: tema6,\n        tema7: tema7,\n        tema8: tema8,\n        tema9: tema9,\n        tema10: tema10,\n        Total: TOTAL\n      };\n    }\n\n    console.log('_____________');\n    console.log(newListaParciales);\n    console.log('_____________');\n  };\n\n  var sduper = [{\n    nm: 1,\n    numeroControl: \"20E20004\",\n    nombre: \"SARAHI MARLENE MALDONADO JUAREZ\",\n    modalidad: \"\"\n  }, {\n    nm: 2,\n    numeroControl: \"20E20002\",\n    nombre: \"ERICK MOISES HERRERA  DE LA CRUZ\",\n    modalidad: \"\"\n  }, {\n    nm: 3,\n    numeroControl: \"20E20011\",\n    nombre: \"JORGE ARCOS VAZQUEZ\",\n    modalidad: \"\"\n  }, {\n    nm: 4,\n    numeroControl: \"20E20006\",\n    nombre: \"RODRIGO MORALES PEREZ\",\n    modalidad: \"\"\n  }, {\n    nm: 5,\n    numeroControl: \"20E20010\",\n    nombre: \"CRISTOPHER LUIS LÓPEZ ARRAIZ\",\n    modalidad: \"\"\n  }];\n\n  const pdf = (nomMateria, docente_actual) => {\n    const Horas_clases = dataReportHorario[0].semanas;\n    const Grupo = dataReportHorario[0].grupo;\n    const Semestre = dataReportHorario[0].semestre;\n    var img = new Image();\n    img.src = Itsr;\n    const pdf = new jsPDF('p', 'pt', 'letter'); //body\n\n    var columns = [{\n      title: \"Nº\",\n      dataKey: \"nm\"\n    }, {\n      title: \"CONTROL\",\n      dataKey: \"numeroControl\"\n    }, {\n      title: \"ESTUDIANTES\",\n      dataKey: \"nombreAspirante\"\n    }, {\n      title: \"O1\",\n      dataKey: \"tema1\"\n    }, {\n      title: \"02\",\n      dataKey: \"tema2\"\n    }, {\n      title: \"03\",\n      dataKey: \"tema3\"\n    }, {\n      title: \"04\",\n      dataKey: \"tema4\"\n    }, {\n      title: \"05\",\n      dataKey: \"tema5\"\n    }, {\n      title: \"06\",\n      dataKey: \"tema6\"\n    }, {\n      title: \"07\",\n      dataKey: \"tema7\"\n    }, {\n      title: \"08\",\n      dataKey: \"tema8\"\n    }, {\n      title: \"09\",\n      dataKey: \"tema9\"\n    }, {\n      title: \"10\",\n      dataKey: \"tema10\"\n    }, {\n      title: \"CAL\",\n      dataKey: 9 * 9\n    }, {\n      title: \"TC\",\n      dataKey: \"modalidad\"\n    }];\n    pdf.autoTable(columns, dataReporteParciales, {\n      margin: {\n        top: 75\n      },\n      styles: {\n        halign: 'center',\n        cellPadding: 0.5,\n        fontSize: 7\n      },\n      theme: 'grid'\n    }); //piede paginas\n\n    const pageCount = pdf.internal.getNumberOfPages();\n\n    for (var i = 1; i <= pageCount; i++) {\n      pdf.setPage(i);\n      pdf.setFontSize(14); //encabezado\n\n      pdf.text(130, 15, 'INSTITUTO TECNOLÓGICO SUPERIOR DE LOS RÍOS');\n      pdf.line(100, 17, 500, 17); // horizontal line\n\n      pdf.setFontSize(8);\n      pdf.text(262, 26, \"PRELISTA CON PARCIALES\");\n      pdf.roundedRect(102, 45, 400, 12, 3, 3);\n      pdf.setFontSize(8);\n      pdf.text(100, 40, `MATERIA: ${nomMateria}`);\n      pdf.setFontSize(8);\n      pdf.text(500, 31, `PERIODO: ${dataPeriodo[0].rango}`);\n      pdf.setFontSize(8);\n      pdf.text(500, 40, `FECHA: ${moment().format('L')}`);\n      pdf.setFontSize(7);\n      pdf.text(122, 54, Horas_clases);\n      pdf.setFontSize(8);\n      pdf.text(500, 66, `GRUPO: ${Semestre} ${Grupo}`);\n      pdf.setFontSize(8);\n      pdf.text(100, 66, `DOCENTE: ${docente_actual}`);\n      pdf.addImage(img, 'PNG', 13, 10, 63, 63);\n      pdf.setFontSize(7); //pie de pagina\n\n      pdf.text(20, 760, \"C (Curso, R:Repetición, E:Especial)\");\n      pdf.setLineWidth(1.6);\n      pdf.line(390, 760, 500, 760);\n      pdf.setFontSize(7);\n      pdf.text(413, 767, \"FIRMA DOCENTE\");\n      pdf.text(20, 770, 'Pagina' + String(i) + ' de ' + String(pageCount), null, null, null, null, \"right\");\n    }\n\n    pdf.save(`PARCIALES ${nomMateria}.pdf`);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(Buttons, {\n    texto: \"Calificaciones Parciales\",\n    onGenerar: infPdf,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["E:/Certificados/itsrdocentes/itsrdocentes/src/componentes/contenedores/docente_calificaciones/reportes/parciales/parciales.js"],"names":["React","Buttons","moment","jsPDF","Itsr","dataMateria","getReporteHorarios","getReporteParcial","dataReportHorario","dataPeriodo","dataReporteParciales","newListaParciales","ReportParciales","data","console","log","infPdf","DOCENTE_ACTUAL","nameDocente","index","length","ID_MATERIA","idMateria","PERIODO","idnomenclaturaPeriodo","GRUPO","idGrupos","Materia","nombre","Promise","all","lista","pdf","error","index2","tema1","parseInt","tema2","tema3","tema4","tema5","tema6","tema7","tema8","tema9","tema10","values","count","reduce","previous","current","TOTAL","nombreAspirante","numeroControl","Total","sduper","nm","modalidad","nomMateria","docente_actual","Horas_clases","semanas","Grupo","grupo","Semestre","semestre","img","Image","src","columns","title","dataKey","autoTable","margin","top","styles","halign","cellPadding","fontSize","theme","pageCount","internal","getNumberOfPages","i","setPage","setFontSize","text","line","roundedRect","rango","format","addImage","setLineWidth","String","save"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Buttons } from '../button/button';\r\nimport moment from 'moment';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport Itsr from '../../../../img/Logo-Tec.png';\r\nimport { dataMateria } from '../../../../../home';\r\nimport { getReporteHorarios, getReporteParcial, dataReportHorario, dataPeriodo, dataReporteParciales } from '../../../../servicios/api';\r\n\r\nvar newListaParciales = [];\r\nexport const ReportParciales = (data) => {\r\n    console.log(data)\r\n\r\n    const infPdf = async () => {\r\n        console.log(\"imprimiendo.... .\")\r\n        try {\r\n            const DOCENTE_ACTUAL = dataMateria[0].nameDocente;\r\n            for (let index = 0; index < dataMateria.length; index++) {\r\n                const ID_MATERIA = dataMateria[index].idMateria;\r\n                const PERIODO = dataMateria[index].idnomenclaturaPeriodo;\r\n                const GRUPO = dataMateria[index].idGrupos;\r\n                const Materia = dataMateria[index].nombre;\r\n                //periodo materia personal grupo\r\n                await Promise.all([getReporteHorarios(PERIODO, ID_MATERIA, GRUPO), getReporteParcial(ID_MATERIA, GRUPO)])\r\n                console.log(dataReporteParciales)\r\n                await lista()\r\n                await pdf(Materia, DOCENTE_ACTUAL)\r\n\r\n                \r\n            }\r\n           \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n/*\r\nnombreAspirante: \"FRANCISCO JAVIER\"\r\nnumeroControl: \"20E20001\"\r\ntema1: \"88\"\r\ntema2: \"91\"\r\ntema3: \"90\"\r\ntema4: \"\"\r\ntema5: \"\"\r\ntema6: \"\"\r\ntema7: \"\"\r\ntema8: \"\"\r\ntema9: \"\"\r\ntema10: \"\"*/\r\n const lista = () => {\r\n    for (let index2 = 0; index2 < dataReporteParciales.length; index2++) {\r\n\r\n        let \r\n        tema1= parseInt(dataReporteParciales[index2].tema1 || 0),\r\n        tema2= parseInt(dataReporteParciales[index2].tema2 || 0),\r\n        tema3= parseInt(dataReporteParciales[index2].tema3 || 0),\r\n        tema4= parseInt(dataReporteParciales[index2].tema4 || 0),\r\n        tema5= parseInt(dataReporteParciales[index2].tema5 || 0), \r\n        tema6= parseInt(dataReporteParciales[index2].tema6 || 0),\r\n        tema7= parseInt(dataReporteParciales[index2].tema7 || 0),\r\n        tema8= parseInt(dataReporteParciales[index2].tema8 || 0),\r\n        tema9= parseInt(dataReporteParciales[index2].tema9 || 0),\r\n        tema10= parseInt(dataReporteParciales[index2].tema10 || 0);\r\n\r\n       \r\n        let values = [90, 85, 88, 0, 0, , 0, 0];\r\n       let count = values.length;\r\n        values = values.reduce((previous, current) => current += previous);\r\n         values /= count;\r\nconsole.log(values)\r\n       \r\n        var TOTAL=(tema1+tema2+tema3+tema4+tema5+tema6+tema7+tema8)/10\r\n\r\n        newListaParciales[index2]  = { \r\n            nombreAspirante: dataReporteParciales[index2].nombreAspirante, \r\n            numeroControl:dataReporteParciales[index2].numeroControl,\r\n            tema1: tema1,\r\n            tema2: tema2,\r\n            tema3: tema3,\r\n            tema4: tema4,\r\n            tema5: tema5,\r\n            tema6: tema6,\r\n            tema7:tema7,\r\n            tema8: tema8,\r\n            tema9: tema9,\r\n            tema10: tema10,\r\n            Total:TOTAL\r\n        };\r\n    }\r\n    console.log('_____________')\r\n    console.log(newListaParciales)\r\n    console.log('_____________')\r\n\r\n }\r\n\r\n\r\n    var sduper = [\r\n        { nm: 1, numeroControl: \"20E20004\", nombre: \"SARAHI MARLENE MALDONADO JUAREZ\", modalidad: \"\" },\r\n        { nm: 2, numeroControl: \"20E20002\", nombre: \"ERICK MOISES HERRERA  DE LA CRUZ\", modalidad: \"\" },\r\n        { nm: 3, numeroControl: \"20E20011\", nombre: \"JORGE ARCOS VAZQUEZ\", modalidad: \"\" },\r\n        { nm: 4, numeroControl: \"20E20006\", nombre: \"RODRIGO MORALES PEREZ\", modalidad: \"\" },\r\n        { nm: 5, numeroControl: \"20E20010\", nombre: \"CRISTOPHER LUIS LÓPEZ ARRAIZ\", modalidad: \"\" }];\r\n\r\n\r\n    const pdf = (nomMateria, docente_actual) => {\r\n        const Horas_clases = dataReportHorario[0].semanas;\r\n        const Grupo = dataReportHorario[0].grupo;\r\n        const Semestre = dataReportHorario[0].semestre;\r\n\r\n        var img = new Image();\r\n        img.src = Itsr;\r\n\r\n        const pdf = new jsPDF('p', 'pt', 'letter')\r\n        //body\r\n\r\n        var columns = [\r\n            { title: \"Nº\", dataKey: \"nm\" },\r\n            { title: \"CONTROL\", dataKey: \"numeroControl\" },\r\n            { title: \"ESTUDIANTES\", dataKey: \"nombreAspirante\", },\r\n            { title: \"O1\", dataKey: \"tema1\" },\r\n            { title: \"02\", dataKey: \"tema2\" },\r\n            { title: \"03\", dataKey: \"tema3\" },\r\n            { title: \"04\", dataKey: \"tema4\" },\r\n            { title: \"05\", dataKey: \"tema5\" },\r\n            { title: \"06\", dataKey: \"tema6\" },\r\n            { title: \"07\", dataKey: \"tema7\" },\r\n            { title: \"08\", dataKey: \"tema8\" },\r\n            { title: \"09\", dataKey: \"tema9\" },\r\n            { title: \"10\", dataKey: \"tema10\" },\r\n            { title: \"CAL\", dataKey: (9 * 9) },\r\n            { title: \"TC\", dataKey: \"modalidad\" }\r\n        ];\r\n\r\n        pdf.autoTable(columns, dataReporteParciales,\r\n            {\r\n                margin: { top: 75 },\r\n                styles: { halign: 'center', cellPadding: 0.5, fontSize: 7 },\r\n                theme: 'grid',\r\n\r\n            }\r\n        );\r\n\r\n\r\n        //piede paginas\r\n        const pageCount = pdf.internal.getNumberOfPages();\r\n        for (var i = 1; i <= pageCount; i++) {\r\n            pdf.setPage(i);\r\n\r\n\r\n            pdf.setFontSize(14)//encabezado\r\n            pdf.text(130, 15, 'INSTITUTO TECNOLÓGICO SUPERIOR DE LOS RÍOS')\r\n            pdf.line(100, 17, 500, 17) // horizontal line\r\n            pdf.setFontSize(8)\r\n            pdf.text(262, 26, \"PRELISTA CON PARCIALES\");\r\n            pdf.roundedRect(102, 45, 400, 12, 3, 3)\r\n            pdf.setFontSize(8)\r\n            pdf.text(100, 40, `MATERIA: ${nomMateria}`);\r\n            pdf.setFontSize(8)\r\n            pdf.text(500, 31, `PERIODO: ${dataPeriodo[0].rango}`);\r\n            pdf.setFontSize(8)\r\n            pdf.text(500, 40, `FECHA: ${moment().format('L')}`);\r\n            pdf.setFontSize(7)\r\n            pdf.text(122, 54, Horas_clases);\r\n            pdf.setFontSize(8)\r\n            pdf.text(500, 66, `GRUPO: ${Semestre} ${Grupo}`);\r\n            pdf.setFontSize(8)\r\n            pdf.text(100, 66, `DOCENTE: ${docente_actual}`);\r\n            pdf.addImage(img, 'PNG', 13, 10, 63, 63)\r\n\r\n\r\n            pdf.setFontSize(7)//pie de pagina\r\n            pdf.text(20, 760, \"C (Curso, R:Repetición, E:Especial)\");\r\n            pdf.setLineWidth(1.6)\r\n            pdf.line(390, 760, 500, 760)\r\n            pdf.setFontSize(7)\r\n            pdf.text(413, 767, \"FIRMA DOCENTE\");\r\n            pdf.text(20, 770, 'Pagina' + String(i) + ' de ' + String(pageCount), null, null, null, null, \"right\");\r\n        }\r\n        pdf.save(`PARCIALES ${nomMateria}.pdf`);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Buttons texto=\"Calificaciones Parciales\" onGenerar={infPdf} color=\"primary\" />\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}