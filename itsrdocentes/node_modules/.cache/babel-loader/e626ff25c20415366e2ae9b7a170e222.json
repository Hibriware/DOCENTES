{"ast":null,"code":"var _jsxFileName = \"E:\\\\Certificados\\\\itsrdocentes\\\\itsrdocentes\\\\src\\\\componentes\\\\contenedores\\\\docente_calificaciones\\\\tablaprueva.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport SaveIcon from '@material-ui/icons/Save';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment'; //importdos\n\nimport { data } from './clase_principal_calificaciones';\nimport './calificaciones.css'; //variables\n\nimport { tema1X, tema2X, tema3X, porcentajeActual, dataAlumnos } from './clase_principal_calificaciones';\nimport { startOfYesterday } from 'date-fns';\nimport { dataMateria } from '../../../home';\nimport { getTemas } from '../../servicios/api';\nimport { datalista } from '../../servicios/api';\nimport { getAlumnos } from '../../servicios/api';\nimport { datalistaAlumnos } from '../../servicios/api';\nimport { getCriterios } from '../../servicios/api';\nimport { dataCriterios } from '../../servicios/api';\nimport { fecha1, fecha2, fecha3 } from '../../../home';\nimport { PERIODO_ACTUAL } from '../../../App';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport moment from 'moment';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    display: 'flex',\n    margin: theme.spacing(1),\n    minWidth: 180\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(-1)\n  },\n  papermaterias: {\n    padding: theme.spacing(-1),\n    textAlign: 'left',\n    color: theme.palette.text.secondary\n  },\n  paperperiodos: {\n    padding: theme.spacing(-2),\n    textAlign: 'left',\n    color: theme.palette.text.primary\n  }\n}));\n\nconst MaterialTableDemo = ({\n  generalAlumnos,\n  materiasDocentes,\n  porcentaje,\n  updateCalificacion\n}) => {\n  const estilos = useStyles();\n  const [materiaID, setMateriaid] = React.useState(''); //id materia para filtrar unidades\n\n  const handleChange = event => {\n    setMateriaid(Number(event.target.value) || '');\n  };\n\n  const [listasTemas, setListas] = React.useState([]);\n  var idDocenteActual, idMateriaActual, periodoActual, cierreActual;\n\n  const buscarTema = async materiaid => {\n    //obtener datos para la consulta de unidades actuales y antes delcieere actual\n    idDocenteActual = dataMateria[0].id_docente;\n    idMateriaActual = materiaid.target.value;\n    periodoActual = 7;\n    cierreActual = fecha1; //fecha1.setMonth(fecha1.getMonth() - 3);\n\n    setMATERIA_ID(idMateriaActual);\n    let fecheFull = moment(fecha1).subtract(2, 'months');\n    let vc = moment(fecheFull).format(\"YYYY-MM-DD\");\n    let bbv = await getTemas(idDocenteActual, idMateriaActual, periodoActual, cierreActual);\n    setListas(datalista);\n    console.log(bbv);\n    console.log(\"<<<<\");\n    console.log(datalista);\n    console.log(idMateriaActual + ' _actual id');\n    console.log(vc + ' _actual id');\n  };\n\n  const [calificaciones, setcalificaciones] = React.useState({\n    datalistaAlumnos\n  });\n  const [MATERIA_ID, setMATERIA_ID] = React.useState([]);\n  const [CRITERIOS, setCRITERIOS] = React.useState([]);\n\n  const obtenerTema = async tem => {\n    //inico\n    let numTemas = tem.target.value; //buscar lista alumnos  idMateria, idDocente\n\n    await getAlumnos(MATERIA_ID, PERIODO_ACTUAL);\n    await getCriterios(PERIODO_ACTUAL, MATERIA_ID, numTemas);\n    await setcalificaciones({\n      datalistaAlumnos: datalistaAlumnos\n    });\n    await setCRITERIOS(dataCriterios);\n    console.log(calificaciones);\n    console.log('ver tema inf.. ' + numTemas + ' materia = ' + MATERIA_ID + ' periodo ' + PERIODO_ACTUAL);\n    console.log(listasTemas);\n  }; //fin\n\n\n  const manejador = (cc1, cc2, cc3) => {\n    //creador de table\n    console.log(\"imprimiendo.....\" + tema1X);\n    console.log(\"datos new.....\" + cc1 + cc2 + cc3);\n  };\n\n  const [ac, setAc] = React.useState('none'); //guardar porcentaje #########\n\n  const guardarPorcentaje = e => {\n    var input = document.getElementById('porcentajeC1');\n    input.addEventListener('input', function () {\n      if (this.value.length > 2) this.value = this.value.slice(0, 2);\n    });\n\n    if (input.value.length === 2) {\n      setAc('block');\n      console.log(\"guardar cambios cambio....\" + input.value);\n      console.log(input); //document.getElementById('most').style = 'none';\n\n      setAc('none'); // falta\n    }\n\n    var input2 = document.getElementById('porcentajeC2'); //inicio2\n\n    input2.addEventListener('input', function () {\n      if (this.value.length > 2) this.value = this.value.slice(0, 2);\n    });\n\n    if (input2.value.length === 2) {\n      setAc('block');\n      console.log(\"guardar cambios cambio....\" + input2.value);\n      setAc('none'); // falta\n    } // fin 2\n\n\n    var input3 = document.getElementById('porcentajeC3'); //inicio2\n\n    input3.addEventListener('input', function () {\n      if (this.value.length > 2) this.value = this.value.slice(0, 2);\n    });\n\n    if (input3.value.length === 2) {\n      setAc('block');\n      console.log(input.value + ' :_ : ' + input2.value + ':_ :' + input3.value);\n      setAc('none'); // falta\n    } // fin 2\n    //if( (input.value + input2.value + input3.value) > 100){\n    //alert('no puede eceder mas 100 %')\n    //}\n\n\n    console.log(\" sin cambio....\" + input);\n    console.log(input.value + input2.value + input3.value);\n  }; //fin\n\n\n  const [alumnos, setAlumnos] = React.useState({\n    columns: [{\n      title: 'Nª',\n      field: 'id',\n      editable: 'never'\n    }, {\n      title: 'Control',\n      field: 'control',\n      editable: 'never'\n    }, {\n      title: 'Nombre',\n      field: 'nameAlumno',\n      editable: 'never'\n    }, {\n      title: 'Curso',\n      field: 'curso',\n      editable: 'never' // lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n\n    }, {\n      title: 'Opcion',\n      field: 'opcion',\n      editable: 'never'\n    }, {\n      title: 'C1',\n      field: 'calR1'\n    }, {\n      title: 'C2',\n      field: 'calR2'\n    }, {\n      title: 'C3',\n      field: 'calR3'\n    }, {\n      title: '#',\n      field: '#',\n      editable: 'never'\n    }, {\n      title: React.createElement(\"input\", {\n        className: \"inputTemas\",\n        type: \"number\",\n        id: \"porcentajeC1\",\n        placeholder: CRITERIOS.porcentajeC1,\n        style: {\n          width: '4ch'\n        },\n        onChange: guardarPorcentaje,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }),\n      field: 'calCriterio1',\n      editable: 'never',\n      minWidth: 10\n    }, {\n      title: React.createElement(\"input\", {\n        className: \"inputTemas\",\n        id: \"porcentajeC2\",\n        placeholder: CRITERIOS.porcentajeC2,\n        style: {\n          width: '4ch'\n        },\n        onChange: guardarPorcentaje,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }),\n      field: 'calCriterio2',\n      editable: 'never',\n      minWidth: 10\n    }, {\n      title: React.createElement(\"input\", {\n        className: \"inputTemas\",\n        id: \"porcentajeC3\",\n        placeholder: CRITERIOS.porcentajeC3,\n        style: {\n          width: '4ch'\n        },\n        onChange: guardarPorcentaje,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }),\n      field: 'calCriterio3',\n      editable: 'never'\n    }, {\n      title: 'Total',\n      field: 'calificaciontotal',\n      editable: 'never'\n    }],\n    generalAlumnos\n  }); //\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \" INSTITUTO TECNOLOGICO SUPERIOR DE LOS RIOS \")), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    className: estilos.paperperiodos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"PERIODO: \", dataMateria[0].idnomenclaturaPeriodo)), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    className: estilos.paperperiodos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"CIERRE DE ACTA: \", fecha1)), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    id: \"most\",\n    style: {\n      display: ac\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"espere..\", React.createElement(LinearProgress, {\n    variant: \"query\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    className: estilos.papermaterias,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: estilos.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"InputLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Materia\"), React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined\",\n    id: \"materia\",\n    valeu: \"\",\n    onChange: buscarTema,\n    label: \"Materia\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, dataMateria.map(materias => React.createElement(MenuItem, {\n    key: materias.nm,\n    value: materias.idMateria,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, materias.nombre + ' (' + materias.semestre + \"/\" + materias.nomenclatura + \") \" + materias.nombreCorto)))))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    className: estilos.papermaterias,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: estilos.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-labe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"Unidad\"), React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-labe\",\n    id: \"unidad\",\n    label: \"Unidad\",\n    onChange: obtenerTema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, listasTemas.map((tem, i) => React.createElement(MenuItem, {\n    key: i,\n    value: tem.numUnidad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, tem.tema)))))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    title: \"Captura de calificaciones\",\n    columns: alumnos.columns //columnas\n    ,\n    data: calificaciones.datalistaAlumnos //filas\n    ,\n    actions: [{\n      icon: 'save',\n      tooltip: 'Save User',\n      onClick: (event, rowData) => alert(\"You saved \" + rowData.control + \" c1=\" + rowData.calR1)\n    }],\n    editable: {\n      // filsa: rowData => rowData.id === '1',\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            //actualizacion del estado\n            updateCalificacion(newData);\n            setcalificaciones(prevState => {\n              const datalistaAlumnos = [...prevState.datalistaAlumnos]; //obtenr data\n              //console.log(newData.nombre = 'sam')//estado fila modificado\n\n              console.log(newData.calCriterio1 = newData.calR1 * (porcentaje[0].t1 / 100));\n              console.log(newData.calCriterio2 = newData.calR2 * (porcentaje[0].t2 / 100));\n              console.log(newData.calCriterio3 = newData.calR3 * (porcentaje[0].t3 / 100));\n              console.log(newData.calificaciontotal = newData.calR1 + newData.calR2 + newData.calR3);\n              console.log(newData); //estado fila modificado\n\n              datalistaAlumnos[datalistaAlumnos.indexOf(oldData)] = newData; // manejador(newData.c1, newData.c2, newData.c3)\n\n              return { ...prevState,\n                datalistaAlumnos\n              };\n            });\n          }\n        }, 600);\n      })\n    },\n    options: {\n      headerStyle: {\n        backgroundColor: '#01579b',\n        color: '#FFF'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, \"*O: Ordinario   *1:Primera oportunidad   *NA: No Alcanza\"), React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, \"*R: Repeticion   *2:Segunda oportunidad\"), React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, \"*E: Especial\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    onClick: manejador,\n    startIcon: React.createElement(SaveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, \"Descargar Reporte de Calificaciones\"))));\n};\n\nconst mapStateToProps = state => ({\n  generalAlumnos: state.alumnosState,\n  materiasDocentes: state.materias,\n  porcentaje: state.porcentaje\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCalificacion(calificacionNew) {\n    dispatch({\n      type: \"updateCalificacion\",\n      calificacionNew\n    });\n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialTableDemo);","map":{"version":3,"sources":["E:/Certificados/itsrdocentes/itsrdocentes/src/componentes/contenedores/docente_calificaciones/tablaprueva.jsx"],"names":["React","useState","useEffect","connect","MaterialTable","Button","Grid","Paper","SaveIcon","InputLabel","FormControl","Select","MenuItem","makeStyles","OutlinedInput","InputAdornment","data","tema1X","tema2X","tema3X","porcentajeActual","dataAlumnos","startOfYesterday","dataMateria","getTemas","datalista","getAlumnos","datalistaAlumnos","getCriterios","dataCriterios","fecha1","fecha2","fecha3","PERIODO_ACTUAL","TextField","CircularProgress","LinearProgress","moment","useStyles","theme","formControl","display","margin","spacing","minWidth","selectEmpty","marginTop","papermaterias","padding","textAlign","color","palette","text","secondary","paperperiodos","primary","MaterialTableDemo","generalAlumnos","materiasDocentes","porcentaje","updateCalificacion","estilos","materiaID","setMateriaid","handleChange","event","Number","target","value","listasTemas","setListas","idDocenteActual","idMateriaActual","periodoActual","cierreActual","buscarTema","materiaid","id_docente","setMATERIA_ID","fecheFull","subtract","vc","format","bbv","console","log","calificaciones","setcalificaciones","MATERIA_ID","CRITERIOS","setCRITERIOS","obtenerTema","tem","numTemas","manejador","cc1","cc2","cc3","ac","setAc","guardarPorcentaje","e","input","document","getElementById","addEventListener","length","slice","input2","input3","alumnos","setAlumnos","columns","title","field","editable","porcentajeC1","width","porcentajeC2","porcentajeC3","idnomenclaturaPeriodo","map","materias","nm","idMateria","nombre","semestre","nomenclatura","nombreCorto","i","numUnidad","tema","icon","tooltip","onClick","rowData","alert","control","calR1","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","prevState","calCriterio1","t1","calCriterio2","calR2","t2","calCriterio3","calR3","t3","calificaciontotal","indexOf","headerStyle","backgroundColor","mapStateToProps","state","alumnosState","mapDispatchToProps","dispatch","calificacionNew","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport MaterialTable from 'material-table';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n//importdos\r\nimport { data } from './clase_principal_calificaciones';\r\nimport './calificaciones.css';\r\n//variables\r\nimport { tema1X, tema2X, tema3X, porcentajeActual, dataAlumnos } from './clase_principal_calificaciones';\r\nimport { startOfYesterday } from 'date-fns';\r\nimport { dataMateria } from '../../../home';\r\nimport { getTemas } from '../../servicios/api';\r\nimport { datalista } from '../../servicios/api';\r\nimport { getAlumnos } from '../../servicios/api';\r\nimport { datalistaAlumnos } from '../../servicios/api';\r\nimport { getCriterios } from '../../servicios/api';\r\nimport { dataCriterios } from '../../servicios/api';\r\nimport { fecha1, fecha2, fecha3 } from '../../../home';\r\nimport { PERIODO_ACTUAL } from '../../../App';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nimport moment from 'moment'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    display: 'flex',\r\n    margin: theme.spacing(1),\r\n    minWidth: 180,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(-1),\r\n  },\r\n  papermaterias: {\r\n    padding: theme.spacing(-1),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  paperperiodos: {\r\n    padding: theme.spacing(-2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst MaterialTableDemo = ({ generalAlumnos, materiasDocentes, porcentaje, updateCalificacion }) => {\r\n\r\n\r\n\r\n  const estilos = useStyles();\r\n  const [materiaID, setMateriaid] = React.useState('');//id materia para filtrar unidades\r\n\r\n\r\n  const handleChange = event => {\r\n    setMateriaid(Number(event.target.value) || '');\r\n  };\r\n  const [listasTemas, setListas] = React.useState([])\r\n\r\n  var idDocenteActual, idMateriaActual, periodoActual, cierreActual;\r\n\r\n  const buscarTema = async materiaid => {\r\n\r\n    //obtener datos para la consulta de unidades actuales y antes delcieere actual\r\n    idDocenteActual = dataMateria[0].id_docente;\r\n    idMateriaActual = materiaid.target.value;\r\n    periodoActual = 7;\r\n    cierreActual = fecha1;\r\n    //fecha1.setMonth(fecha1.getMonth() - 3);\r\n    setMATERIA_ID(idMateriaActual)\r\n    let fecheFull = moment(fecha1).subtract(2, 'months')\r\n    let vc = moment(fecheFull).format(\"YYYY-MM-DD\");\r\n\r\n    let bbv = await getTemas(idDocenteActual, idMateriaActual, periodoActual, cierreActual);\r\n    setListas(datalista)\r\n    console.log(bbv)\r\n\r\n    console.log(\"<<<<\")\r\n    console.log(datalista)\r\n    console.log(idMateriaActual + ' _actual id')\r\n    console.log(vc + ' _actual id')\r\n\r\n  };\r\n\r\n  const [calificaciones, setcalificaciones] = React.useState({ datalistaAlumnos })\r\n  const [MATERIA_ID, setMATERIA_ID] = React.useState([]);\r\n  const [CRITERIOS, setCRITERIOS] = React.useState([])\r\n\r\n  const obtenerTema = async (tem) => {//inico\r\n    let numTemas = tem.target.value;\r\n\r\n    //buscar lista alumnos  idMateria, idDocente\r\n    await getAlumnos(MATERIA_ID, PERIODO_ACTUAL);\r\n    await getCriterios(PERIODO_ACTUAL, MATERIA_ID, numTemas)\r\n    await setcalificaciones({ datalistaAlumnos: datalistaAlumnos });\r\n    await setCRITERIOS(dataCriterios);\r\n    console.log(calificaciones)\r\n    console.log('ver tema inf.. ' + numTemas + ' materia = ' + MATERIA_ID + ' periodo ' + PERIODO_ACTUAL)\r\n    console.log(listasTemas)\r\n  }//fin\r\n\r\n\r\n\r\n\r\n  const manejador = (cc1, cc2, cc3) => {//creador de table\r\n    console.log(\"imprimiendo.....\" + tema1X)\r\n    console.log(\"datos new.....\" + cc1 + cc2 + cc3)\r\n  };\r\n\r\n  const [ac, setAc] = React.useState('none');//guardar porcentaje #########\r\n  const guardarPorcentaje = (e) => {\r\n\r\n    var input = document.getElementById('porcentajeC1');\r\n    input.addEventListener('input', function () {\r\n      if (this.value.length > 2)\r\n        this.value = this.value.slice(0, 2);\r\n    })\r\n    if (input.value.length === 2) {\r\n      setAc('block');\r\n      console.log(\"guardar cambios cambio....\" + input.value)\r\n      console.log(input)\r\n      //document.getElementById('most').style = 'none';\r\n      setAc('none');// falta\r\n    }\r\n\r\n    var input2 = document.getElementById('porcentajeC2');//inicio2\r\n    input2.addEventListener('input', function () {\r\n      if (this.value.length > 2)\r\n        this.value = this.value.slice(0, 2);\r\n    })\r\n    if (input2.value.length === 2) {\r\n      setAc('block');\r\n      console.log(\"guardar cambios cambio....\" + input2.value)\r\n      setAc('none');// falta\r\n    } // fin 2\r\n\r\n\r\n    \r\n    var input3 = document.getElementById('porcentajeC3');//inicio2\r\n    input3.addEventListener('input', function () {\r\n      if (this.value.length > 2)\r\n        this.value = this.value.slice(0, 2);\r\n    })\r\n    if (input3.value.length === 2) {\r\n      setAc('block');\r\n      console.log( input.value +' :_ : '+ input2.value +':_ :'+ input3.value)\r\n      setAc('none');// falta\r\n    } // fin 2\r\n//if( (input.value + input2.value + input3.value) > 100){\r\n//alert('no puede eceder mas 100 %')\r\n//}\r\n    console.log(\" sin cambio....\" + input)\r\n    console.log(input.value + input2.value + input3.value)\r\n  }//fin\r\n\r\n\r\n  const [alumnos, setAlumnos] = React.useState({\r\n    columns: [\r\n      { title: 'Nª', field: 'id', editable: 'never' },\r\n      { title: 'Control', field: 'control', editable: 'never' },\r\n      { title: 'Nombre', field: 'nameAlumno', editable: 'never' },\r\n      {\r\n        title: 'Curso',\r\n        field: 'curso',\r\n        editable: 'never',\r\n        // lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n      },\r\n      { title: 'Opcion', field: 'opcion', editable: 'never' },\r\n      { title: 'C1', field: 'calR1', },\r\n      { title: 'C2', field: 'calR2', },\r\n      { title: 'C3', field: 'calR3', },\r\n      { title: '#', field: '#', editable: 'never' },\r\n      { title: <input className=\"inputTemas\" type=\"number\" id=\"porcentajeC1\" placeholder={CRITERIOS.porcentajeC1} style={{ width: '4ch' }} onChange={guardarPorcentaje} ></input>, field: 'calCriterio1', editable: 'never', minWidth: 10 },\r\n      { title: <input className=\"inputTemas\" id=\"porcentajeC2\" placeholder={CRITERIOS.porcentajeC2} style={{ width: '4ch' }} onChange={guardarPorcentaje} ></input>, field: 'calCriterio2', editable: 'never', minWidth: 10 },\r\n      { title: <input className=\"inputTemas\" id=\"porcentajeC3\" placeholder={CRITERIOS.porcentajeC3} style={{ width: '4ch' }} onChange={guardarPorcentaje}  ></input>, field: 'calCriterio3', editable: 'never' },\r\n      { title: 'Total', field: 'calificaciontotal', editable: 'never' },\r\n    ],\r\n    generalAlumnos\r\n  })\r\n\r\n  //\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <h3 > INSTITUTO TECNOLOGICO SUPERIOR DE LOS RIOS </h3>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper elevation={0} className={estilos.paperperiodos}>PERIODO: {dataMateria[0].idnomenclaturaPeriodo}</Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper elevation={0} className={estilos.paperperiodos}>CIERRE DE ACTA: {fecha1}</Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper elevation={0} ><p id=\"most\" style={{ display:ac }}>espere..<LinearProgress variant=\"query\" /></p></Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper elevation={0} className={estilos.papermaterias}>\r\n            <FormControl variant=\"outlined\" className={estilos.formControl}>\r\n              <InputLabel id=\"InputLabel\">Materia</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined\"\r\n                id=\"materia\"\r\n                valeu=\"\"\r\n                onChange={buscarTema}\r\n                label=\"Materia\"\r\n              >\r\n\r\n                {\r\n                  dataMateria.map((materias) => (<MenuItem key={materias.nm} value={materias.idMateria} >{materias.nombre + ' (' + materias.semestre + \"/\" + materias.nomenclatura + \") \" + materias.nombreCorto}</MenuItem>))\r\n                }\r\n\r\n              </Select>\r\n            </FormControl>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper elevation={0} className={estilos.papermaterias}>\r\n            <FormControl variant=\"outlined\" className={estilos.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-labe\">Unidad</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-labe\"\r\n                id=\"unidad\"\r\n                label=\"Unidad\"\r\n                onChange={obtenerTema}\r\n              >\r\n                {\r\n                  listasTemas.map((tem, i) => (<MenuItem key={i} value={tem.numUnidad}>{tem.tema}</MenuItem>))\r\n\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={12} sm={12}>\r\n          {/*   <Paper > <Paper className={classes.root}>\r\n    <TableContainer className={classes.container}>*/}\r\n          <Paper elevation={3} >\r\n            <MaterialTable\r\n              title=\"Captura de calificaciones\"\r\n              columns={alumnos.columns}//columnas\r\n              data={calificaciones.datalistaAlumnos}//filas\r\n\r\n              actions={[\r\n                {\r\n                  icon: 'save',\r\n                  tooltip: 'Save User',\r\n                  onClick: (event, rowData) => alert(\"You saved \" + rowData.control + \" c1=\" + rowData.calR1)\r\n                }\r\n              ]}\r\n\r\n              editable={\r\n                {\r\n                  // filsa: rowData => rowData.id === '1',\r\n                  onRowUpdate: (newData, oldData) =>\r\n                    new Promise(resolve => {\r\n                      setTimeout(() => {\r\n                        resolve();\r\n\r\n                        if (oldData) {\r\n\r\n                          //actualizacion del estado\r\n                          updateCalificacion(newData)\r\n\r\n                          setcalificaciones(prevState => {\r\n                            const datalistaAlumnos = [...prevState.datalistaAlumnos];//obtenr data\r\n                            //console.log(newData.nombre = 'sam')//estado fila modificado\r\n                            console.log(newData.calCriterio1 = (newData.calR1 * (porcentaje[0].t1 / 100)))\r\n                            console.log(newData.calCriterio2 = (newData.calR2 * (porcentaje[0].t2 / 100)))\r\n                            console.log(newData.calCriterio3 = (newData.calR3 * (porcentaje[0].t3 / 100)))\r\n                            console.log(newData.calificaciontotal = (newData.calR1 + newData.calR2 + newData.calR3))\r\n\r\n                            console.log(newData)//estado fila modificado\r\n\r\n                            datalistaAlumnos[datalistaAlumnos.indexOf(oldData)] = newData;\r\n                            // manejador(newData.c1, newData.c2, newData.c3)\r\n\r\n                            return { ...prevState, datalistaAlumnos };\r\n                          });\r\n\r\n\r\n\r\n                        }\r\n                      }, 600);\r\n                    }),\r\n\r\n                }\r\n              }\r\n\r\n              options={{\r\n                headerStyle: {\r\n                  backgroundColor: '#01579b',\r\n                  color: '#FFF'\r\n                }\r\n              }}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper >*O: Ordinario   *1:Primera oportunidad   *NA: No Alcanza</Paper>\r\n          <Paper >*R: Repeticion   *2:Segunda oportunidad</Paper>\r\n          <Paper >*E: Especial</Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={manejador}\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            Descargar Reporte de Calificaciones\r\n    </Button>\r\n\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  generalAlumnos: state.alumnosState,\r\n  materiasDocentes: state.materias,\r\n  porcentaje: state.porcentaje\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n  updateCalificacion(calificacionNew) {\r\n    dispatch({\r\n      type: \"updateCalificacion\",\r\n      calificacionNew\r\n    })\r\n  }\r\n\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialTableDemo)"]},"metadata":{},"sourceType":"module"}